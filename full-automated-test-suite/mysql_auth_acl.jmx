<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="mysql_ip" elementType="Argument">
            <stringProp name="Argument.name">mysql_ip</stringProp>
            <stringProp name="Argument.value">${__property(mysql_ip,,172.100.239.1)}</stringProp>
            <stringProp name="Argument.desc">mysql server ip</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mysql_port" elementType="Argument">
            <stringProp name="Argument.name">mysql_port</stringProp>
            <stringProp name="Argument.value">${__property(mysql_port,,3306)}</stringProp>
            <stringProp name="Argument.desc">mysql port</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mysql_user" elementType="Argument">
            <stringProp name="Argument.name">mysql_user</stringProp>
            <stringProp name="Argument.value">${__property(mysql_user,,root)}</stringProp>
            <stringProp name="Argument.desc">mysql user</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="mysql_pwd" elementType="Argument">
            <stringProp name="Argument.name">mysql_pwd</stringProp>
            <stringProp name="Argument.value">${__property(mysql_pwd,,public)}</stringProp>
            <stringProp name="Argument.desc">mysql password</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ssl_mysql_user" elementType="Argument">
            <stringProp name="Argument.name">ssl_mysql_user</stringProp>
            <stringProp name="Argument.value">${__property(ssl_mysql_user,,ssluser)}</stringProp>
            <stringProp name="Argument.desc">mysql ssl user</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ssl_mysql_pwd" elementType="Argument">
            <stringProp name="Argument.name">ssl_mysql_pwd</stringProp>
            <stringProp name="Argument.value">${__property(ssl_mysql_pwd,,public)}</stringProp>
            <stringProp name="Argument.desc">mysql ssl password</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ssl_mysql_port" elementType="Argument">
            <stringProp name="Argument.name">ssl_mysql_port</stringProp>
            <stringProp name="Argument.value">${__property(mysql_port,,3306)}</stringProp>
            <stringProp name="Argument.desc">mysql ssl port</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="database" elementType="Argument">
            <stringProp name="Argument.name">database</stringProp>
            <stringProp name="Argument.value">${__property(dbname,,mqtt)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">dbname of auth/acl for emqx</stringProp>
          </elementProp>
          <elementProp name="ca_route" elementType="Argument">
            <stringProp name="Argument.name">ca_route</stringProp>
            <stringProp name="Argument.value">${__property(route,,/Users/xujun/Downloads/cert)}</stringProp>
            <stringProp name="Argument.desc">ssl certs doc route</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="emqx_ip" elementType="Argument">
            <stringProp name="Argument.name">emqx_ip</stringProp>
            <stringProp name="Argument.value">${__property(emqx_ip,,127.0.0.1)}</stringProp>
            <stringProp name="Argument.desc">emqx ip</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="emqx_ip2" elementType="Argument">
            <stringProp name="Argument.name">emqx_ip2</stringProp>
            <stringProp name="Argument.value">${__property(emqx_ip2,,127.0.0.1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="emqx_ip_port" elementType="Argument">
            <stringProp name="Argument.name">emqx_ip_port</stringProp>
            <stringProp name="Argument.value">${__property(emqx_ip_port,,18083)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="emqx_ip_mqtt_port" elementType="Argument">
            <stringProp name="Argument.name">emqx_ip_mqtt_port</stringProp>
            <stringProp name="Argument.value">1883</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="emqx_ip2_mqtt_port" elementType="Argument">
            <stringProp name="Argument.name">emqx_ip2_mqtt_port</stringProp>
            <stringProp name="Argument.value">1883</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="emqx_docker_name" elementType="Argument">
            <stringProp name="Argument.name">emqx_docker_name</stringProp>
            <stringProp name="Argument.value">emqx_single</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="emqx2_docker_name" elementType="Argument">
            <stringProp name="Argument.name">emqx2_docker_name</stringProp>
            <stringProp name="Argument.value">emqx_single2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="emqx_user" elementType="Argument">
            <stringProp name="Argument.name">emqx_user</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.desc">emqx account</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="emqx_pwd" elementType="Argument">
            <stringProp name="Argument.name">emqx_pwd</stringProp>
            <stringProp name="Argument.value">public</stringProp>
            <stringProp name="Argument.desc">emqx password</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="data_user" elementType="Argument">
            <stringProp name="Argument.name">data_user</stringProp>
            <stringProp name="Argument.value">test</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">auth account</stringProp>
          </elementProp>
          <elementProp name="data_pwd" elementType="Argument">
            <stringProp name="Argument.name">data_pwd</stringProp>
            <stringProp name="Argument.value">test</stringProp>
            <stringProp name="Argument.desc">auth password</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="localhost" elementType="Argument">
            <stringProp name="Argument.name">localhost</stringProp>
            <stringProp name="Argument.value">${__property(localhost,,127.0.0.1)}</stringProp>
            <stringProp name="Argument.desc">jmeter local ip</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="client_id" elementType="Argument">
            <stringProp name="Argument.name">client_id</stringProp>
            <stringProp name="Argument.value">connect_id</stringProp>
            <stringProp name="Argument.desc">clientid for mqtt connect</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="salt" elementType="Argument">
            <stringProp name="Argument.name">salt</stringProp>
            <stringProp name="Argument.value">123</stringProp>
            <stringProp name="Argument.desc">salt</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="api_version" elementType="Argument">
            <stringProp name="Argument.name">api_version</stringProp>
            <stringProp name="Argument.value">/api/v4</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="topic" elementType="Argument">
            <stringProp name="Argument.name">topic</stringProp>
            <stringProp name="Argument.value">t/1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sha256" elementType="Argument">
            <stringProp name="Argument.name">sha256</stringProp>
            <stringProp name="Argument.value">9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08</stringProp>
            <stringProp name="Argument.desc">sha256 hash password</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sha256_salt" elementType="Argument">
            <stringProp name="Argument.name">sha256_salt</stringProp>
            <stringProp name="Argument.value">ecd71870d1963316a97e3ac3408c9835ad8cf0f3c1bc703527c30265534f75ae</stringProp>
            <stringProp name="Argument.desc">salt+sha256 hash password</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="salt_sha256" elementType="Argument">
            <stringProp name="Argument.name">salt_sha256</stringProp>
            <stringProp name="Argument.value">a8327d4a49d4631631d090a72297d8d749337a30e6eb0416bd3655b71e36481b</stringProp>
            <stringProp name="Argument.desc">sha256+salt hash password</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="md5" elementType="Argument">
            <stringProp name="Argument.name">md5</stringProp>
            <stringProp name="Argument.value">098f6bcd4621d373cade4e832627b4f6</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="md5_salt" elementType="Argument">
            <stringProp name="Argument.name">md5_salt</stringProp>
            <stringProp name="Argument.value">cc03e747a6afbbcbf8be7668acfebee5</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="salt_md5" elementType="Argument">
            <stringProp name="Argument.name">salt_md5</stringProp>
            <stringProp name="Argument.value">abe45d28281cfa2a4201c9b90a143095</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sha" elementType="Argument">
            <stringProp name="Argument.name">sha</stringProp>
            <stringProp name="Argument.value">a94a8fe5ccb19ba61c4c0873d391e987982fbbd3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sha_salt" elementType="Argument">
            <stringProp name="Argument.name">sha_salt</stringProp>
            <stringProp name="Argument.value">7288edd0fc3ffcbe93a0cf06e3568e28521687bc</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="salt_sha" elementType="Argument">
            <stringProp name="Argument.name">salt_sha</stringProp>
            <stringProp name="Argument.value">ac8de3b5b736fd627b42c91071c5c2a6ec963a89</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sha512" elementType="Argument">
            <stringProp name="Argument.name">sha512</stringProp>
            <stringProp name="Argument.value">ee26b0dd4af7e749aa1a8ee3c10ae9923f618980772e473f8819a5d4940e0db27ac185f8a0e1d5f84f88bc887fd67b143732c304cc5fa9ad8e6f57f50028a8ff</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sha512_salt" elementType="Argument">
            <stringProp name="Argument.name">sha512_salt</stringProp>
            <stringProp name="Argument.value">daef4953b9783365cad6615223720506cc46c5167cd16ab500fa597aa08ff964eb24fb19687f34d7665f778fcb6c5358fc0a5b81e1662cf90f73a2671c53f991</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="salt_sha512" elementType="Argument">
            <stringProp name="Argument.name">salt_sha512</stringProp>
            <stringProp name="Argument.value">69b8982b4d0a0dab66aa92a2e4f8eb6f3f8f0b5f9d902a127df556a55426523b45596f6471e477f02f4061acb88af461b928aa468dd1aa5a3faaa663e4d60379</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Mysql AUTH/ACL" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">content-type</stringProp>
              <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
          <collectionProp name="AuthManager.auth_list">
            <elementProp name="" elementType="Authorization">
              <stringProp name="Authorization.url">http://${emqx_ip}</stringProp>
              <stringProp name="Authorization.username">${emqx_user}</stringProp>
              <stringProp name="Authorization.password">${emqx_pwd}</stringProp>
              <stringProp name="Authorization.domain"></stringProp>
              <stringProp name="Authorization.realm"></stringProp>
            </elementProp>
            <elementProp name="" elementType="Authorization">
              <stringProp name="Authorization.url">http://${emqx_ip2}</stringProp>
              <stringProp name="Authorization.username">${emqx_user}</stringProp>
              <stringProp name="Authorization.password">${emqx_pwd}</stringProp>
              <stringProp name="Authorization.domain"></stringProp>
              <stringProp name="Authorization.realm"></stringProp>
            </elementProp>
          </collectionProp>
          <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
        </AuthManager>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${emqx_ip}</stringProp>
          <stringProp name="HTTPSampler.port">18083</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
          <boolProp name="autocommit">true</boolProp>
          <stringProp name="checkQuery"></stringProp>
          <stringProp name="connectionAge">5000</stringProp>
          <stringProp name="connectionProperties"></stringProp>
          <stringProp name="dataSource">mysql8</stringProp>
          <stringProp name="dbUrl">jdbc:mysql://${mysql_ip}:${mysql_port}/${database}</stringProp>
          <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
          <stringProp name="initQuery"></stringProp>
          <boolProp name="keepAlive">true</boolProp>
          <stringProp name="password">${mysql_pwd}</stringProp>
          <stringProp name="poolMax">0</stringProp>
          <boolProp name="preinit">false</boolProp>
          <stringProp name="timeout">10000</stringProp>
          <stringProp name="transactionIsolation">DEFAULT</stringProp>
          <stringProp name="trimInterval">60000</stringProp>
          <stringProp name="username">root</stringProp>
        </JDBCDataSource>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Enable &quot;hot_confs&quot;" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"> {&quot;type&quot;:&quot;hot_confs&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">${api_version}/maybe_start_modules</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="67791721">&quot;code&quot;:0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Create Table &quot;mqtt_user&quot;" enabled="true">
          <stringProp name="dataSource">mysql8</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">CREATE TABLE `mqtt_user` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `username` varchar(100) DEFAULT NULL,
  `password` varchar(300) DEFAULT NULL,
  `salt` varchar(35) DEFAULT NULL,
  `is_superuser` tinyint(1) DEFAULT 0,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `mqtt_username` (`username`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Create Table &quot;mqtt_acl&quot;" enabled="true">
          <stringProp name="dataSource">mysql8</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">CREATE TABLE `mqtt_acl` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `allow` int(1) DEFAULT 1 COMMENT &apos;0: deny, 1: allow&apos;,
  `ipaddr` varchar(60) DEFAULT NULL COMMENT &apos;IpAddress&apos;,
  `username` varchar(100) DEFAULT NULL COMMENT &apos;Username&apos;,
  `clientid` varchar(100) DEFAULT NULL COMMENT &apos;ClientId&apos;,
  `access` int(2) NOT NULL COMMENT &apos;1: subscribe, 2: publish, 3: pubsub&apos;,
  `topic` varchar(100) NOT NULL DEFAULT &apos;&apos; COMMENT &apos;Topic Filter&apos;,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Set Settings" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;mqtt_wildcard_subscription&quot;:&quot;true&quot;,&quot;mqtt_strict_mode&quot;:&quot;false&quot;,&quot;mqtt_shared_subscription&quot;:&quot;true&quot;,&quot;mqtt_retain_available&quot;:&quot;true&quot;,&quot;mqtt_max_topic_levels&quot;:&quot;0&quot;,&quot;mqtt_max_topic_alias&quot;:&quot;65535&quot;,&quot;mqtt_max_qos_allowed&quot;:&quot;2&quot;,&quot;mqtt_max_packet_size&quot;:&quot;1MB&quot;,&quot;mqtt_max_clientid_len&quot;:&quot;65535&quot;,&quot;mqtt_ignore_loop_deliver&quot;:&quot;false&quot;,&quot;flapping_detect_policy&quot;:&quot;30, 1m, 5m&quot;,&quot;enable_acl_cache&quot;:&quot;off&quot;,&quot;broker_sys_interval&quot;:&quot;1m&quot;,&quot;broker_sys_heartbeat&quot;:&quot;30s&quot;,&quot;broker_shared_subscription_strategy&quot;:&quot;random&quot;,&quot;broker_shared_dispatch_ack_enabled&quot;:&quot;false&quot;,&quot;broker_session_locking_strategy&quot;:&quot;quorum&quot;,&quot;allow_anonymous&quot;:&quot;false&quot;,&quot;acl_nomatch&quot;:&quot;deny&quot;,&quot;acl_deny_action&quot;:&quot;ignore&quot;,&quot;acl_cache_ttl&quot;:&quot;1m&quot;,&quot;acl_cache_max_size&quot;:&quot;32&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port">18083</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">${api_version}/configs/emqx</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">&quot;allow_anonymous&quot;:&quot;false&quot;,&quot;enable_acl_cache&quot;:&quot;off&quot;,&quot;acl_nomatch&quot;:&quot;deny&quot;</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="67791721">&quot;code&quot;:0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Node Name" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="ser_defined_variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${emqx_ip2}</stringProp>
          <stringProp name="HTTPSampler.port">${emqx_ip_port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${api_version}/brokers</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">emqx2_node_name</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[0].node</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">err_emqx2_node_name</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="67791721">&quot;code&quot;:0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Manual Cluster" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;node&quot;:&quot;${emqx2_node_name}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${api_version}/cluster/invite_node</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="67791721">&quot;code&quot;:0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Modules ID" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="ser_defined_variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${api_version}/modules</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">mysql_mo_id;acl_control_id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[?(@.type=~/.*mysql_authentication.*/)].id;$.data[?(@.title.en=~/.*Internal ACL File.*/)].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1;1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">err_mysql_mo_id;err_acl_control_id</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="67791721">&quot;code&quot;:0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Turn Off Internal ACL Control" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;enabled&quot;:false}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${api_version}/modules/${acl_control_id}</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="67791721">&quot;code&quot;:0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add Delayed Publish Module" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;config&quot;:{},&quot;type&quot;:&quot;delayed_publish&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">${api_version}/modules</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="67791721">&quot;code&quot;:0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Exist Mysql Module" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="ser_defined_variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${api_version}/modules/${mysql_mo_id}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="67791721">&quot;code&quot;:0</stringProp>
              <stringProp name="2039184452">Bad Arguments: {badmatch,not_found</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">48</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="tcp smoke testing" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add Mysql Auth/ACL Module" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;config&quot;:{&quot;server&quot;:&quot;${mysql_ip}:${mysql_port}&quot;,&quot;database&quot;:&quot;${database}&quot;,&quot;pool_size&quot;:8,&quot;user&quot;:&quot;${mysql_user}&quot;,&quot;password&quot;:&quot;${mysql_pwd}&quot;,&quot;auto_reconnect&quot;:true,&quot;password_hash&quot;:&quot;plain&quot;,&quot;auth_query&quot;:&quot;select password from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;acl_query&quot;:&quot;select allow, ipaddr, username, clientid, access, topic from mqtt_acl where ipaddr = &apos;%a&apos; or username = &apos;%u&apos; or username = &apos;$all&apos; or clientid = &apos;%c&apos;&quot;,&quot;super_query&quot;:&quot;select is_superuser from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;query_timeout&quot;:&quot;5s&quot;,&quot;ssl&quot;:false,&quot;cacertfile&quot;:{&quot;file&quot;:&quot;&quot;,&quot;filename&quot;:&quot;&quot;},&quot;keyfile&quot;:{&quot;file&quot;:&quot;&quot;,&quot;filename&quot;:&quot;&quot;},&quot;certfile&quot;:{&quot;file&quot;:&quot;&quot;,&quot;filename&quot;:&quot;&quot;},&quot;verify&quot;:false},&quot;type&quot;:&quot;mysql_authentication&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${api_version}/modules</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="67791721">&quot;code&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get module ID" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="ser_defined_variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${api_version}/modules</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mysql_mo_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[?(@.type=~/.*mysql_authentication.*/)].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_mysql_mo_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="67791721">&quot;code&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Enable Mysql Auth/ACL Module" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;enabled&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${api_version}/modules/${mysql_mo_id}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="67791721">&quot;code&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="auth test" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty Auth Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_user;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-234430262">updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert Auth Data" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO `mqtt_user` ( `username`, `password`, `salt`) VALUES (&apos;${data_user}&apos;,&apos;${data_pwd}&apos;,NULL);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path"></stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">conn_</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path"></stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}_1</stringProp>
              <stringProp name="mqtt.password">${data_pwd}_1</stringProp>
              <stringProp name="mqtt.client_id_prefix">conn_</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="acl test" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty ACL Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_acl;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert ACL Rule" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO mqtt_acl (allow, ipaddr, username, clientid, access, topic) VALUES (1, NULL, &apos;$all&apos;, NULL, 3, &apos;#&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">$delayed/1/${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">String</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent">hello emqx!!!!!</stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-776774548">uccessfuly</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="Sub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <boolProp name="mqtt.debug_response">true</boolProp>
              <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
              <stringProp name="mqtt.sample_condition_value">4000</stringProp>
            </net.xmeter.samplers.SubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1985609380">hello emqx!!!!!</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="modify module parameter test" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Modify Mysql Auth/ACL Module" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;mysql_authentication&quot;,&quot;id&quot;:&quot;${mysql_mo_id}&quot;,&quot;enabled&quot;:true,&quot;description&quot;:{&quot;zh&quot;:&quot;使用 MySQL 作为认证与 ACL 的数据源。&quot;,&quot;en&quot;:&quot;Use MySQL as the data source for authentication and ACL.&quot;},&quot;config&quot;:{&quot;server&quot;:&quot;${mysql_ip}:${mysql_port}&quot;,&quot;database&quot;:&quot;${database}&quot;,&quot;pool_size&quot;:6,&quot;user&quot;:&quot;${mysql_user}&quot;,&quot;password&quot;:&quot;${mysql_pwd}&quot;,&quot;auto_reconnect&quot;:true,&quot;password_hash&quot;:&quot;plain&quot;,&quot;auth_query&quot;:&quot;select password from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;acl_query&quot;:&quot;select allow, ipaddr, username, clientid, access, topic from mqtt_acl where ipaddr = &apos;%a&apos; or username = &apos;%u&apos; or username = &apos;$all&apos; or clientid = &apos;%c&apos;&quot;,&quot;super_query&quot;:&quot;select is_superuser from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;query_timeout&quot;:&quot;3s&quot;,&quot;ssl&quot;:false,&quot;cacertfile&quot;:{&quot;file&quot;:&quot;&quot;,&quot;filename&quot;:&quot;&quot;},&quot;keyfile&quot;:{&quot;file&quot;:&quot;&quot;,&quot;filename&quot;:&quot;&quot;},&quot;certfile&quot;:{&quot;file&quot;:&quot;&quot;,&quot;filename&quot;:&quot;&quot;},&quot;verify&quot;:false}}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${api_version}/modules/${mysql_mo_id}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">&quot;pool_size&quot;:6,query_timeout&quot;:&quot;3s&quot;</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="487480124">&quot;pool_size&quot;:6</stringProp>
                <stringProp name="-316620672">&quot;query_timeout&quot;:&quot;3s&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="auth test" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty Auth Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_user;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-234430262">updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert Auth Data" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO `mqtt_user` ( `username`, `password`, `salt`) VALUES (&apos;${data_user}&apos;,&apos;${data_pwd}&apos;,NULL);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path"></stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">conn_</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path"></stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}_1</stringProp>
              <stringProp name="mqtt.password">${data_pwd}_1</stringProp>
              <stringProp name="mqtt.client_id_prefix">conn_</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="acl test" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty ACL Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_acl;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert ACL Rule" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO mqtt_acl (allow, ipaddr, username, clientid, access, topic) VALUES (1, NULL, &apos;$all&apos;, NULL, 3, &apos;#&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">$delayed/1/${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">String</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent">hello emqx!!!!!</stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-776774548">uccessfuly</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="Sub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <boolProp name="mqtt.debug_response">true</boolProp>
              <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
              <stringProp name="mqtt.sample_condition_value">4000</stringProp>
            </net.xmeter.samplers.SubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1985609380">hello emqx!!!!!</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="module delete test" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="correct resource delete" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Exist Mysql Module" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="ser_defined_variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules/${mysql_mo_id}</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">34</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="auth test" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
                <stringProp name="mqtt.server">${emqx_ip}</stringProp>
                <stringProp name="mqtt.port">1883</stringProp>
                <stringProp name="mqtt.version">3.1</stringProp>
                <stringProp name="mqtt.conn_timeout">10</stringProp>
                <stringProp name="mqtt.protocol">TCP</stringProp>
                <stringProp name="mqtt.ws_path"></stringProp>
                <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
                <stringProp name="mqtt.clientcert_file_path"></stringProp>
                <stringProp name="mqtt.clientcert_password"></stringProp>
                <stringProp name="mqtt.user_name">${data_user}</stringProp>
                <stringProp name="mqtt.password">${data_pwd}</stringProp>
                <stringProp name="mqtt.client_id_prefix">conn_</stringProp>
                <boolProp name="mqtt.client_id_suffix">true</boolProp>
                <stringProp name="mqtt.conn_keep_alive">300</stringProp>
                <stringProp name="mqtt.conn_attampt_max">0</stringProp>
                <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
                <stringProp name="mqtt.conn_clean_session">true</stringProp>
              </net.xmeter.samplers.ConnectSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1259833018">Successful</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">300</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1259833018">Successful</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">true</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Error resource delete" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add Mysql Auth/ACL Module" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;config&quot;:{&quot;server&quot;:&quot;127.0.0.2:3306&quot;,&quot;database&quot;:&quot;test&quot;,&quot;pool_size&quot;:8,&quot;user&quot;:&quot;test&quot;,&quot;password&quot;:&quot;test&quot;,&quot;auto_reconnect&quot;:true,&quot;password_hash&quot;:&quot;sha256&quot;,&quot;auth_query&quot;:&quot;select password from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;acl_query&quot;:&quot;select allow, ipaddr, username, clientid, access, topic from mqtt_acl where ipaddr = &apos;%a&apos; or username = &apos;%u&apos; or username = &apos;$all&apos; or clientid = &apos;%c&apos;&quot;,&quot;super_query&quot;:&quot;select is_superuser from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;query_timeout&quot;:&quot;5s&quot;,&quot;ssl&quot;:false,&quot;cacertfile&quot;:{&quot;file&quot;:&quot;&quot;,&quot;filename&quot;:&quot;&quot;},&quot;keyfile&quot;:{&quot;file&quot;:&quot;&quot;,&quot;filename&quot;:&quot;&quot;},&quot;certfile&quot;:{&quot;file&quot;:&quot;&quot;,&quot;filename&quot;:&quot;&quot;},&quot;verify&quot;:false},&quot;type&quot;:&quot;mysql_authentication&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get module ID" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="ser_defined_variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">mysql_mo_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[?(@.type=~/.*mysql_authentication.*/)].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">err_mysql_mo_id</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Exist Mysql Module" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="ser_defined_variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules/${mysql_mo_id}</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">34</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="change to available resource test" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add Mysql Auth/ACL Module" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;config&quot;:{&quot;server&quot;:&quot;127.0.0.2:${mysql_port}&quot;,&quot;database&quot;:&quot;${database}&quot;,&quot;pool_size&quot;:8,&quot;user&quot;:&quot;${mysql_user}&quot;,&quot;password&quot;:&quot;${mysql_pwd}&quot;,&quot;auto_reconnect&quot;:true,&quot;password_hash&quot;:&quot;plain&quot;,&quot;auth_query&quot;:&quot;select password from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;acl_query&quot;:&quot;select allow, ipaddr, username, clientid, access, topic from mqtt_acl where ipaddr = &apos;%a&apos; or username = &apos;%u&apos; or username = &apos;$all&apos; or clientid = &apos;%c&apos;&quot;,&quot;super_query&quot;:&quot;select is_superuser from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;query_timeout&quot;:&quot;5s&quot;,&quot;ssl&quot;:false,&quot;cacertfile&quot;:{&quot;file&quot;:&quot;&quot;,&quot;filename&quot;:&quot;&quot;},&quot;keyfile&quot;:{&quot;file&quot;:&quot;&quot;,&quot;filename&quot;:&quot;&quot;},&quot;certfile&quot;:{&quot;file&quot;:&quot;&quot;,&quot;filename&quot;:&quot;&quot;},&quot;verify&quot;:false},&quot;type&quot;:&quot;mysql_authentication&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${api_version}/modules</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">unavailable MySQL resources</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="67791721">&quot;code&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get module ID" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="ser_defined_variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${api_version}/modules</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
            </ConstantTimer>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mysql_mo_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[?(@.type=~/.*mysql_authentication.*/)].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_mysql_mo_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="67791721">&quot;code&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Modify Mysql Auth/ACL Module" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;mysql_authentication&quot;,&quot;id&quot;:&quot;${mysql_mo_id}&quot;,&quot;enabled&quot;:false,&quot;description&quot;:{&quot;zh&quot;:&quot;使用 MySQL 作为认证与 ACL 的数据源。&quot;,&quot;en&quot;:&quot;Use MySQL as the data source for authentication and ACL.&quot;},&quot;config&quot;:{&quot;server&quot;:&quot;${mysql_ip}:${mysql_port}&quot;,&quot;database&quot;:&quot;${database}&quot;,&quot;pool_size&quot;:8,&quot;user&quot;:&quot;${mysql_user}&quot;,&quot;password&quot;:&quot;${mysql_pwd}&quot;,&quot;auto_reconnect&quot;:true,&quot;password_hash&quot;:&quot;plain&quot;,&quot;auth_query&quot;:&quot;select password from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;acl_query&quot;:&quot;select allow, ipaddr, username, clientid, access, topic from mqtt_acl where ipaddr = &apos;%a&apos; or username = &apos;%u&apos; or username = &apos;$all&apos; or clientid = &apos;%c&apos;&quot;,&quot;super_query&quot;:&quot;select is_superuser from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;query_timeout&quot;:&quot;5s&quot;,&quot;ssl&quot;:false,&quot;cacertfile&quot;:{&quot;file&quot;:&quot;&quot;,&quot;filename&quot;:&quot;&quot;},&quot;keyfile&quot;:{&quot;file&quot;:&quot;&quot;,&quot;filename&quot;:&quot;&quot;},&quot;certfile&quot;:{&quot;file&quot;:&quot;&quot;,&quot;filename&quot;:&quot;&quot;},&quot;verify&quot;:false}}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${api_version}/modules/${mysql_mo_id}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">available MySQL resources</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="67791721">&quot;code&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Enable Mysql Auth/ACL Module" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;enabled&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${api_version}/modules/${mysql_mo_id}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="67791721">&quot;code&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="auth test" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty Auth Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_user;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-234430262">updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert Auth Data" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO `mqtt_user` ( `username`, `password`, `salt`) VALUES (&apos;${data_user}&apos;,&apos;${data_pwd}&apos;,NULL);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path"></stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">conn_</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path"></stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}_1</stringProp>
              <stringProp name="mqtt.password">${data_pwd}_1</stringProp>
              <stringProp name="mqtt.client_id_prefix">conn_</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="acl test" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty ACL Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_acl;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert ACL Rule" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO mqtt_acl (allow, ipaddr, username, clientid, access, topic) VALUES (1, NULL, &apos;$all&apos;, NULL, 3, &apos;#&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">$delayed/1/${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">String</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent">hello emqx!!!!!</stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-776774548">uccessfuly</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="Sub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <boolProp name="mqtt.debug_response">true</boolProp>
              <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
              <stringProp name="mqtt.sample_condition_value">4000</stringProp>
            </net.xmeter.samplers.SubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1985609380">hello emqx!!!!!</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="modify parameters of mismatched resources" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Modify Mysql Auth/ACL Module" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;mysql_authentication&quot;,&quot;id&quot;:&quot;${mysql_mo_id}&quot;,&quot;enabled&quot;:false,&quot;description&quot;:{&quot;zh&quot;:&quot;使用 MySQL 作为认证与 ACL 的数据源。&quot;,&quot;en&quot;:&quot;Use MySQL as the data source for authentication and ACL.&quot;},&quot;config&quot;:{&quot;server&quot;:&quot;${mysql_ip}:${mysql_port}&quot;,&quot;database&quot;:&quot;${database}&quot;,&quot;pool_size&quot;:8,&quot;user&quot;:&quot;err_${mysql_user}&quot;,&quot;password&quot;:&quot;err_${mysql_pwd}&quot;,&quot;auto_reconnect&quot;:true,&quot;password_hash&quot;:&quot;plain&quot;,&quot;auth_query&quot;:&quot;select password from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;acl_query&quot;:&quot;select allow, ipaddr, username, clientid, access, topic from mqtt_acl where ipaddr = &apos;%a&apos; or username = &apos;%u&apos; or username = &apos;$all&apos; or clientid = &apos;%c&apos;&quot;,&quot;super_query&quot;:&quot;select is_superuser from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;query_timeout&quot;:&quot;5s&quot;,&quot;ssl&quot;:false,&quot;cacertfile&quot;:{&quot;file&quot;:&quot;&quot;,&quot;filename&quot;:&quot;&quot;},&quot;keyfile&quot;:{&quot;file&quot;:&quot;&quot;,&quot;filename&quot;:&quot;&quot;},&quot;certfile&quot;:{&quot;file&quot;:&quot;&quot;,&quot;filename&quot;:&quot;&quot;},&quot;verify&quot;:false}}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${api_version}/modules/${mysql_mo_id}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">&quot;user&quot;:&quot;err_user&quot;&amp;&quot;password&quot;:&quot;err_password&quot;</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="67791721">&quot;code&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="auth test" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty Auth Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_user;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-234430262">updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert Auth Data" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO `mqtt_user` ( `username`, `password`, `salt`) VALUES (&apos;${data_user}&apos;,&apos;${data_pwd}&apos;,NULL);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path"></stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">conn_</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path"></stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}_1</stringProp>
              <stringProp name="mqtt.password">${data_pwd}_1</stringProp>
              <stringProp name="mqtt.client_id_prefix">conn_</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="acl test" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty ACL Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_acl;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert ACL Rule" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO mqtt_acl (allow, ipaddr, username, clientid, access, topic) VALUES (1, NULL, &apos;$all&apos;, NULL, 3, &apos;#&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">$delayed/1/${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">String</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent">hello emqx!!!!!</stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-776774548">uccessfuly</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="Sub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <boolProp name="mqtt.debug_response">true</boolProp>
              <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
              <stringProp name="mqtt.sample_condition_value">4000</stringProp>
            </net.xmeter.samplers.SubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1985609380">hello emqx!!!!!</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Modify Mysql Auth/ACL Module" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;mysql_authentication&quot;,&quot;id&quot;:&quot;${mysql_mo_id}&quot;,&quot;enabled&quot;:false,&quot;description&quot;:{&quot;zh&quot;:&quot;使用 MySQL 作为认证与 ACL 的数据源。&quot;,&quot;en&quot;:&quot;Use MySQL as the data source for authentication and ACL.&quot;},&quot;config&quot;:{&quot;server&quot;:&quot;${mysql_ip}:${mysql_port}&quot;,&quot;database&quot;:&quot;err_database&quot;,&quot;pool_size&quot;:8,&quot;user&quot;:&quot;${mysql_user}&quot;,&quot;password&quot;:&quot;${mysql_pwd}&quot;,&quot;auto_reconnect&quot;:true,&quot;password_hash&quot;:&quot;plain&quot;,&quot;auth_query&quot;:&quot;select password from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;acl_query&quot;:&quot;select allow, ipaddr, username, clientid, access, topic from mqtt_acl where ipaddr = &apos;%a&apos; or username = &apos;%u&apos; or username = &apos;$all&apos; or clientid = &apos;%c&apos;&quot;,&quot;super_query&quot;:&quot;select is_superuser from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;query_timeout&quot;:&quot;5s&quot;,&quot;ssl&quot;:false,&quot;cacertfile&quot;:{&quot;file&quot;:&quot;&quot;,&quot;filename&quot;:&quot;&quot;},&quot;keyfile&quot;:{&quot;file&quot;:&quot;&quot;,&quot;filename&quot;:&quot;&quot;},&quot;certfile&quot;:{&quot;file&quot;:&quot;&quot;,&quot;filename&quot;:&quot;&quot;},&quot;verify&quot;:false}}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${api_version}/modules/${mysql_mo_id}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">&quot;database&quot;:&quot;err_database&quot;</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="67791721">&quot;code&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="auth test" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty Auth Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_user;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-234430262">updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert Auth Data" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO `mqtt_user` ( `username`, `password`, `salt`) VALUES (&apos;${data_user}&apos;,&apos;${data_pwd}&apos;,NULL);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path"></stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">conn_</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path"></stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}_1</stringProp>
              <stringProp name="mqtt.password">${data_pwd}_1</stringProp>
              <stringProp name="mqtt.client_id_prefix">conn_</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="acl test" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty ACL Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_acl;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert ACL Rule" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO mqtt_acl (allow, ipaddr, username, clientid, access, topic) VALUES (1, NULL, &apos;$all&apos;, NULL, 3, &apos;#&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">$delayed/1/${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">String</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent">hello emqx!!!!!</stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-776774548">uccessfuly</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="Sub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <boolProp name="mqtt.debug_response">true</boolProp>
              <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
              <stringProp name="mqtt.sample_condition_value">4000</stringProp>
            </net.xmeter.samplers.SubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1985609380">hello emqx!!!!!</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Modify Mysql Auth/ACL Module" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;mysql_authentication&quot;,&quot;id&quot;:&quot;${mysql_mo_id}&quot;,&quot;enabled&quot;:false,&quot;description&quot;:{&quot;zh&quot;:&quot;使用 MySQL 作为认证与 ACL 的数据源。&quot;,&quot;en&quot;:&quot;Use MySQL as the data source for authentication and ACL.&quot;},&quot;config&quot;:{&quot;server&quot;:&quot;${mysql_ip}:${mysql_port}&quot;,&quot;database&quot;:&quot;${database}&quot;,&quot;pool_size&quot;:8,&quot;user&quot;:&quot;${mysql_user}&quot;,&quot;password&quot;:&quot;${mysql_pwd}&quot;,&quot;auto_reconnect&quot;:true,&quot;password_hash&quot;:&quot;plain&quot;,&quot;auth_query&quot;:&quot;select password from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;acl_query&quot;:&quot;select allow, ipaddr, username, clientid, access, topic from mqtt_acl where ipaddr = &apos;%a&apos; or username = &apos;%u&apos; or username = &apos;$all&apos; or clientid = &apos;%c&apos;&quot;,&quot;super_query&quot;:&quot;select is_superuser from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;query_timeout&quot;:&quot;5s&quot;,&quot;ssl&quot;:false,&quot;cacertfile&quot;:{&quot;file&quot;:&quot;&quot;,&quot;filename&quot;:&quot;&quot;},&quot;keyfile&quot;:{&quot;file&quot;:&quot;&quot;,&quot;filename&quot;:&quot;&quot;},&quot;certfile&quot;:{&quot;file&quot;:&quot;&quot;,&quot;filename&quot;:&quot;&quot;},&quot;verify&quot;:false}}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${api_version}/modules/${mysql_mo_id}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">available MySQL resources</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="67791721">&quot;code&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Enable Mysql Auth/ACL Module" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;enabled&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${api_version}/modules/${mysql_mo_id}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="67791721">&quot;code&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="ssl smoke testing" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Get SSL Content" enabled="true">
            <stringProp name="TestPlan.comments">ca, client_key, client_cert</stringProp>
            <stringProp name="BeanShellSampler.query">import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.io.BufferedReader;

File f_ca = new File(&quot;${ca_route}/ca.pem&quot;);
File f_key = new File(&quot;${ca_route}/client.key&quot;);
File f_cert = new File(&quot;${ca_route}/client.pem&quot;);
BufferedReader br_ca = new BufferedReader(new InputStreamReader(new FileInputStream(f_ca),&quot;UTF-8&quot;));
BufferedReader br_key = new BufferedReader(new InputStreamReader(new FileInputStream(f_key),&quot;UTF-8&quot;));
BufferedReader br_cert = new BufferedReader(new InputStreamReader(new FileInputStream(f_cert),&quot;UTF-8&quot;));
 
String line_ca = null;
String ca=&quot;&quot;;
while ((line_ca = br_ca.readLine()) != null) {
		//System.out.println(line_ca);
	if(line_ca!=&quot;&quot;)
		ca = ca +line_ca+&quot;\\\n&quot;;
		if(line_ca.contains(&quot;END&quot;))
		break;
}
String line_key = null;
String client_key=&quot;&quot;;
while ((line_key = br_key.readLine()) != null) {
		//System.out.println(line_key);
		client_key = client_key +line_key+&quot;\\\n&quot;;
		if(line_key.contains(&quot;END&quot;))
		break;
}
String line_cert = null;
String client_cert=&quot;&quot;;
while ((line_cert = br_cert.readLine()) != null) {
		//System.out.println(line_key);
		client_cert = client_cert +line_cert+&quot;\\\n&quot;;
		if(line_cert.contains(&quot;END&quot;))
		break;
}
vars.put(&quot;ca&quot;,ca);
vars.put(&quot;client_key&quot;,client_key);
vars.put(&quot;client_cert&quot;,client_cert);

//	br.close();
 //       fis.close();
 // 	System.out.println(line);</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Modify Mysql Auth/ACL Module" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;mysql_authentication&quot;,&quot;id&quot;:&quot;${mysql_mo_id}&quot;,&quot;enabled&quot;:true,&quot;description&quot;:{&quot;zh&quot;:&quot;MySQL 认证/访问控制&quot;,&quot;en&quot;:&quot;MySQL AUTH/ACL&quot;},&quot;config&quot;:{&quot;server&quot;:&quot;${mysql_ip}:${ssl_mysql_port}&quot;,&quot;database&quot;:&quot;${database}&quot;,&quot;pool_size&quot;:8,&quot;user&quot;:&quot;${ssl_mysql_user}&quot;,&quot;password&quot;:&quot;${ssl_mysql_pwd}&quot;,&quot;auto_reconnect&quot;:true,&quot;password_hash&quot;:&quot;plain&quot;,&quot;auth_query&quot;:&quot;select password from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;acl_query&quot;:&quot;select allow, ipaddr, username, clientid, access, topic from mqtt_acl where ipaddr = &apos;%a&apos; or username = &apos;%u&apos; or username = &apos;$all&apos; or clientid = &apos;%c&apos;&quot;,&quot;super_query&quot;:&quot;select is_superuser from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;query_timeout&quot;:&quot;5s&quot;,&quot;ssl&quot;:true,&quot;cacertfile&quot;:{&quot;filename&quot;:&quot;ca.pem&quot;,&quot;file&quot;:&quot;${ca}&quot;},&quot;keyfile&quot;:{&quot;filename&quot;:&quot;client-key.pem&quot;,&quot;file&quot;:&quot;${client_key}&quot;},&quot;certfile&quot;:{&quot;filename&quot;:&quot;client-cert.pem&quot;,&quot;file&quot;:&quot;${client_cert}&quot;},&quot;verify&quot;:false}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${api_version}/modules/${mysql_mo_id}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">ssl-</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="67791721">&quot;code&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="auth test" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty Auth Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_user;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-234430262">updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert Auth Data" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO `mqtt_user` ( `username`, `password`, `salt`) VALUES (&apos;${data_user}&apos;,&apos;${data_pwd}&apos;,NULL);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip2}</stringProp>
              <stringProp name="mqtt.port">${emqx_ip2_mqtt_port}</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path"></stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">conn_</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx2_ip}</stringProp>
              <stringProp name="mqtt.port">${emqx_ip2_mqtt_port}</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path"></stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}_1</stringProp>
              <stringProp name="mqtt.password">${data_pwd}_1</stringProp>
              <stringProp name="mqtt.client_id_prefix">conn_</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="acl test" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty ACL Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_acl;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert ACL Rule" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO mqtt_acl (allow, ipaddr, username, clientid, access, topic) VALUES (1, NULL, &apos;$all&apos;, NULL, 3, &apos;#&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip2}</stringProp>
              <stringProp name="mqtt.port">${emqx_ip2_mqtt_port}</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path"></stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">conn_</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">$delayed/1/${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">String</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent">hello emqx!!!!!</stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-776774548">uccessfuly</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="Sub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <boolProp name="mqtt.debug_response">true</boolProp>
              <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
              <stringProp name="mqtt.sample_condition_value">4000</stringProp>
            </net.xmeter.samplers.SubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1985609380">hello emqx!!!!!</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="resource reconnection test" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Modify Mysql Auth/ACL Module --&quot;auto_reconnect&quot;:false" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;mysql_authentication&quot;,&quot;id&quot;:&quot;${mysql_mo_id}&quot;,&quot;enabled&quot;:false,&quot;description&quot;:{&quot;zh&quot;:&quot;使用 MySQL 作为认证与 ACL 的数据源。&quot;,&quot;en&quot;:&quot;Use MySQL as the data source for authentication and ACL.&quot;},&quot;config&quot;:{&quot;server&quot;:&quot;${mysql_ip}:${mysql_port}&quot;,&quot;database&quot;:&quot;${database}&quot;,&quot;pool_size&quot;:8,&quot;user&quot;:&quot;${mysql_user}&quot;,&quot;password&quot;:&quot;${mysql_pwd}&quot;,&quot;auto_reconnect&quot;:false,&quot;password_hash&quot;:&quot;plain&quot;,&quot;auth_query&quot;:&quot;select password from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;acl_query&quot;:&quot;select allow, ipaddr, username, clientid, access, topic from mqtt_acl where ipaddr = &apos;%a&apos; or username = &apos;%u&apos; or username = &apos;$all&apos; or clientid = &apos;%c&apos;&quot;,&quot;super_query&quot;:&quot;select is_superuser from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;query_timeout&quot;:&quot;5s&quot;,&quot;ssl&quot;:false,&quot;cacertfile&quot;:{&quot;file&quot;:&quot;&quot;,&quot;filename&quot;:&quot;&quot;},&quot;keyfile&quot;:{&quot;file&quot;:&quot;&quot;,&quot;filename&quot;:&quot;&quot;},&quot;certfile&quot;:{&quot;file&quot;:&quot;&quot;,&quot;filename&quot;:&quot;&quot;},&quot;verify&quot;:false}}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${api_version}/modules/${mysql_mo_id}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">&quot;auto_reconnect&quot;:false</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="67791721">&quot;code&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="restart mysql " enabled="true">
            <boolProp name="SystemSampler.checkReturnCode">false</boolProp>
            <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
            <stringProp name="SystemSampler.command">docker</stringProp>
            <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="Argument">
                  <stringProp name="Argument.name"></stringProp>
                  <stringProp name="Argument.value">restart</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="" elementType="Argument">
                  <stringProp name="Argument.name"></stringProp>
                  <stringProp name="Argument.value">mysql</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SystemSampler.directory"></stringProp>
          </SystemSampler>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="auth test" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty Auth Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_user;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">20000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-234430262">updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert Auth Data" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO `mqtt_user` ( `username`, `password`, `salt`) VALUES (&apos;${data_user}&apos;,&apos;${data_pwd}&apos;,NULL);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path"></stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">conn_</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Modify Mysql Auth/ACL Module--&quot;auto_reconnect&quot;:true" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;mysql_authentication&quot;,&quot;id&quot;:&quot;${mysql_mo_id}&quot;,&quot;enabled&quot;:false,&quot;description&quot;:{&quot;zh&quot;:&quot;使用 MySQL 作为认证与 ACL 的数据源。&quot;,&quot;en&quot;:&quot;Use MySQL as the data source for authentication and ACL.&quot;},&quot;config&quot;:{&quot;server&quot;:&quot;${mysql_ip}:${mysql_port}&quot;,&quot;database&quot;:&quot;${database}&quot;,&quot;pool_size&quot;:8,&quot;user&quot;:&quot;${mysql_user}&quot;,&quot;password&quot;:&quot;${mysql_pwd}&quot;,&quot;auto_reconnect&quot;:true,&quot;password_hash&quot;:&quot;plain&quot;,&quot;auth_query&quot;:&quot;select password from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;acl_query&quot;:&quot;select allow, ipaddr, username, clientid, access, topic from mqtt_acl where ipaddr = &apos;%a&apos; or username = &apos;%u&apos; or username = &apos;$all&apos; or clientid = &apos;%c&apos;&quot;,&quot;super_query&quot;:&quot;select is_superuser from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;query_timeout&quot;:&quot;5s&quot;,&quot;ssl&quot;:false,&quot;cacertfile&quot;:{&quot;file&quot;:&quot;&quot;,&quot;filename&quot;:&quot;&quot;},&quot;keyfile&quot;:{&quot;file&quot;:&quot;&quot;,&quot;filename&quot;:&quot;&quot;},&quot;certfile&quot;:{&quot;file&quot;:&quot;&quot;,&quot;filename&quot;:&quot;&quot;},&quot;verify&quot;:false}}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${api_version}/modules/${mysql_mo_id}</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">&quot;auto_reconnect&quot;:true</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="67791721">&quot;code&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="auth test" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty Auth Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_user;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-234430262">updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert Auth Data" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO `mqtt_user` ( `username`, `password`, `salt`) VALUES (&apos;${data_user}&apos;,&apos;${data_pwd}&apos;,NULL);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Enable Mysql Module" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;enabled&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules/${mysql_mo_id}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path"></stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">conn_</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path"></stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}_1</stringProp>
              <stringProp name="mqtt.password">${data_pwd}_1</stringProp>
              <stringProp name="mqtt.client_id_prefix">conn_</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="acl test" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty ACL Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_acl;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert ACL Rule" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO mqtt_acl (allow, ipaddr, username, clientid, access, topic) VALUES (1, NULL, &apos;$all&apos;, NULL, 3, &apos;#&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">$delayed/1/${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">String</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent">hello emqx!!!!!</stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-776774548">uccessfuly</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="Sub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <boolProp name="mqtt.debug_response">true</boolProp>
              <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
              <stringProp name="mqtt.sample_condition_value">4000</stringProp>
            </net.xmeter.samplers.SubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1985609380">hello emqx!!!!!</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="super user test" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="is super user" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty ACL Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_acl;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty Auth Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_user;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-234430262">updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert Auth Data" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO `mqtt_user` ( `username`, `password`, `salt`,`is_superuser`) VALUES (&apos;${data_user}&apos;,&apos;${data_pwd}&apos;,NULL,1);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">$delayed/1/${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">String</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent">hello emqx!!!!!</stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-776774548">uccessfuly</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="Sub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <boolProp name="mqtt.debug_response">true</boolProp>
              <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
              <stringProp name="mqtt.sample_condition_value">4000</stringProp>
            </net.xmeter.samplers.SubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1985609380">hello emqx!!!!!</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="not super user" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty ACL Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_acl;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty Auth Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_user;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-234430262">updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert Auth Data" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO `mqtt_user` ( `username`, `password`, `salt`,`is_superuser`) VALUES (&apos;${data_user}&apos;,&apos;${data_pwd}&apos;,NULL,0);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path"></stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">conn_</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">$delayed/1/${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">String</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent">hello emqx!!!!!</stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-776774548">uccessfuly</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="Sub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <boolProp name="mqtt.debug_response">true</boolProp>
              <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
              <stringProp name="mqtt.sample_condition_value">4000</stringProp>
            </net.xmeter.samplers.SubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1985609380">hello emqx!!!!!</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="emqx stop one of the node tests" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="Stop Emqx One Node" enabled="true">
            <boolProp name="SystemSampler.checkReturnCode">false</boolProp>
            <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
            <stringProp name="SystemSampler.command">docker</stringProp>
            <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="Argument">
                  <stringProp name="Argument.name"></stringProp>
                  <stringProp name="Argument.value">stop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="" elementType="Argument">
                  <stringProp name="Argument.name"></stringProp>
                  <stringProp name="Argument.value">${emqx2_docker_name}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SystemSampler.directory"></stringProp>
          </SystemSampler>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="auth test" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty Auth Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_user;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-234430262">updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">15000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert Auth Data" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO `mqtt_user` ( `username`, `password`, `salt`) VALUES (&apos;${data_user}&apos;,&apos;${data_pwd}&apos;,NULL);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path"></stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">conn_</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path"></stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}_1</stringProp>
              <stringProp name="mqtt.password">${data_pwd}_1</stringProp>
              <stringProp name="mqtt.client_id_prefix">conn_</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="acl test" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty ACL Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_acl;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert ACL Rule" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO mqtt_acl (allow, ipaddr, username, clientid, access, topic) VALUES (1, NULL, &apos;$all&apos;, NULL, 3, &apos;#&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">$delayed/1/${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">String</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent">hello emqx!!!!!</stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-776774548">uccessfuly</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="Sub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <boolProp name="mqtt.debug_response">true</boolProp>
              <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
              <stringProp name="mqtt.sample_condition_value">4000</stringProp>
            </net.xmeter.samplers.SubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1985609380">hello emqx!!!!!</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="emqx start one of the node tests" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="Start Emqx One Node" enabled="true">
            <boolProp name="SystemSampler.checkReturnCode">false</boolProp>
            <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
            <stringProp name="SystemSampler.command">docker</stringProp>
            <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="Argument">
                  <stringProp name="Argument.name"></stringProp>
                  <stringProp name="Argument.value">start</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="" elementType="Argument">
                  <stringProp name="Argument.name"></stringProp>
                  <stringProp name="Argument.value">${emqx2_docker_name}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SystemSampler.directory"></stringProp>
          </SystemSampler>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="auth test" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty Auth Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_user;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-234430262">updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">15000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert Auth Data" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO `mqtt_user` ( `username`, `password`, `salt`) VALUES (&apos;${data_user}&apos;,&apos;${data_pwd}&apos;,NULL);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip2}</stringProp>
              <stringProp name="mqtt.port">${emqx_ip2_mqtt_port}</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path"></stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">conn_</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path"></stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}_1</stringProp>
              <stringProp name="mqtt.password">${data_pwd}_1</stringProp>
              <stringProp name="mqtt.client_id_prefix">conn_</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="acl test" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty ACL Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_acl;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert ACL Rule" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO mqtt_acl (allow, ipaddr, username, clientid, access, topic) VALUES (1, NULL, &apos;$all&apos;, NULL, 3, &apos;#&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip2}</stringProp>
              <stringProp name="mqtt.port">${emqx_ip2_mqtt_port}</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path"></stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">conn_</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">$delayed/1/${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">String</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent">hello emqx!!!!!</stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-776774548">uccessfuly</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="Sub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <boolProp name="mqtt.debug_response">true</boolProp>
              <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
              <stringProp name="mqtt.sample_condition_value">4000</stringProp>
            </net.xmeter.samplers.SubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1985609380">hello emqx!!!!!</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="emqx restart test" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="restart emqx " enabled="true">
            <boolProp name="SystemSampler.checkReturnCode">false</boolProp>
            <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
            <stringProp name="SystemSampler.command">docker</stringProp>
            <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="Argument">
                  <stringProp name="Argument.name"></stringProp>
                  <stringProp name="Argument.value">restart</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="" elementType="Argument">
                  <stringProp name="Argument.name"></stringProp>
                  <stringProp name="Argument.value">${emqx_docker_name}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SystemSampler.directory"></stringProp>
          </SystemSampler>
          <hashTree/>
          <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="restart emqx " enabled="true">
            <boolProp name="SystemSampler.checkReturnCode">false</boolProp>
            <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
            <stringProp name="SystemSampler.command">docker</stringProp>
            <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="Argument">
                  <stringProp name="Argument.name"></stringProp>
                  <stringProp name="Argument.value">restart</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="" elementType="Argument">
                  <stringProp name="Argument.name"></stringProp>
                  <stringProp name="Argument.value">${emqx2_docker_name}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="SystemSampler.directory"></stringProp>
          </SystemSampler>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="auth test" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty Auth Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_user;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-234430262">updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">30000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert Auth Data" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO `mqtt_user` ( `username`, `password`, `salt`) VALUES (&apos;${data_user}&apos;,&apos;${data_pwd}&apos;,NULL);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path"></stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">conn_</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path"></stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}_1</stringProp>
              <stringProp name="mqtt.password">${data_pwd}_1</stringProp>
              <stringProp name="mqtt.client_id_prefix">conn_</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="acl test" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty ACL Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_acl;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert ACL Rule" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO mqtt_acl (allow, ipaddr, username, clientid, access, topic) VALUES (1, NULL, &apos;$all&apos;, NULL, 3, &apos;#&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">$delayed/2/${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">String</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent">hello emqx!!!!!</stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-776774548">uccessfuly</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="Sub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <boolProp name="mqtt.debug_response">true</boolProp>
              <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
              <stringProp name="mqtt.sample_condition_value">6000</stringProp>
            </net.xmeter.samplers.SubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1985609380">hello emqx!!!!!</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="emqx node remove" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Node Remove" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="ser_defined_variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${api_version}/cluster/force_leave/${emqx2_node_name}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mysql_mo_id;acl_control_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[?(@.type=~/.*mysql_authentication.*/)].id;$.data[?(@.title.en=~/.*Internal ACL File.*/)].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1;1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_mysql_mo_id;err_acl_control_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="67791721">&quot;code&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="auth test" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty Auth Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_user;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-234430262">updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">30000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert Auth Data" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO `mqtt_user` ( `username`, `password`, `salt`) VALUES (&apos;${data_user}&apos;,&apos;${data_pwd}&apos;,NULL);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path"></stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">conn_</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path"></stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}_1</stringProp>
              <stringProp name="mqtt.password">${data_pwd}_1</stringProp>
              <stringProp name="mqtt.client_id_prefix">conn_</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="acl test" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty ACL Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_acl;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert ACL Rule" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO mqtt_acl (allow, ipaddr, username, clientid, access, topic) VALUES (1, NULL, &apos;$all&apos;, NULL, 3, &apos;#&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">$delayed/3/${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">String</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent">hello emqx!!!!!</stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-776774548">uccessfuly</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="Sub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <boolProp name="mqtt.debug_response">true</boolProp>
              <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
              <stringProp name="mqtt.sample_condition_value">6000</stringProp>
            </net.xmeter.samplers.SubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1985609380">hello emqx!!!!!</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="emqx Invitation node" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Manual Cluster" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;node&quot;:&quot;${emqx2_node_name}&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${api_version}/cluster/invite_node</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="67791721">&quot;code&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="auth test" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty Auth Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_user;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-234430262">updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">3000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert Auth Data" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO `mqtt_user` ( `username`, `password`, `salt`) VALUES (&apos;${data_user}&apos;,&apos;${data_pwd}&apos;,NULL);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path"></stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">conn_</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path"></stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}_1</stringProp>
              <stringProp name="mqtt.password">${data_pwd}_1</stringProp>
              <stringProp name="mqtt.client_id_prefix">conn_</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="acl test" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty ACL Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_acl;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert ACL Rule" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO mqtt_acl (allow, ipaddr, username, clientid, access, topic) VALUES (1, NULL, &apos;$all&apos;, NULL, 3, &apos;#&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">$delayed/3/${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">String</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent">hello emqx!!!!!</stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-776774548">uccessfuly</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="Sub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <boolProp name="mqtt.debug_response">true</boolProp>
              <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
              <stringProp name="mqtt.sample_condition_value">6000</stringProp>
            </net.xmeter.samplers.SubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1985609380">hello emqx!!!!!</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="disable&amp;enable module test" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Modules ID" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="ser_defined_variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${api_version}/modules</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">mysql_mo_id;acl_control_id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[?(@.type=~/.*mysql_authentication.*/)].id;$.data[?(@.title.en=~/.*Internal ACL File.*/)].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1;1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">err_mysql_mo_id;err_acl_control_id</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="67791721">&quot;code&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="disable mysql module" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Disable Mysql Module" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;enabled&quot;:false}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules/${mysql_mo_id}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path"></stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">conn_</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="enable mysql module" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="enable Mysql Module" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;enabled&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules/${mysql_mo_id}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path"></stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">conn_</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">300</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">$delayed/3/${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">String</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent">hello emqx!!!!!</stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-776774548">uccessfuly</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="Sub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <boolProp name="mqtt.debug_response">true</boolProp>
              <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
              <stringProp name="mqtt.sample_condition_value">6000</stringProp>
            </net.xmeter.samplers.SubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1985609380">hello emqx!!!!!</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="acl black and white list test" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Set Settings --acl_nomath as allow" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;mqtt_wildcard_subscription&quot;:&quot;true&quot;,&quot;mqtt_strict_mode&quot;:&quot;false&quot;,&quot;mqtt_shared_subscription&quot;:&quot;true&quot;,&quot;mqtt_retain_available&quot;:&quot;true&quot;,&quot;mqtt_max_topic_levels&quot;:&quot;0&quot;,&quot;mqtt_max_topic_alias&quot;:&quot;65535&quot;,&quot;mqtt_max_qos_allowed&quot;:&quot;2&quot;,&quot;mqtt_max_packet_size&quot;:&quot;1MB&quot;,&quot;mqtt_max_clientid_len&quot;:&quot;65535&quot;,&quot;mqtt_ignore_loop_deliver&quot;:&quot;false&quot;,&quot;flapping_detect_policy&quot;:&quot;30, 1m, 5m&quot;,&quot;enable_acl_cache&quot;:&quot;off&quot;,&quot;broker_sys_interval&quot;:&quot;1m&quot;,&quot;broker_sys_heartbeat&quot;:&quot;30s&quot;,&quot;broker_shared_subscription_strategy&quot;:&quot;random&quot;,&quot;broker_shared_dispatch_ack_enabled&quot;:&quot;false&quot;,&quot;broker_session_locking_strategy&quot;:&quot;quorum&quot;,&quot;allow_anonymous&quot;:&quot;true&quot;,&quot;acl_nomatch&quot;:&quot;allow&quot;,&quot;acl_deny_action&quot;:&quot;ignore&quot;,&quot;acl_cache_ttl&quot;:&quot;1m&quot;,&quot;acl_cache_max_size&quot;:&quot;32&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">18083</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${api_version}/configs/emqx</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">&quot;acl_nomatch&quot;:&quot;allow&quot;</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="67791721">&quot;code&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="empty acl check" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty ACL Table" enabled="true">
              <stringProp name="TestPlan.comments">delete acl in mysql，when acl nomath in mysql, use internal acl doc</stringProp>
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_acl;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-234430262">updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="Create Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">$delayed/3/${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">String</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent">hello emqx!!!!!</stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-776774548">uccessfuly</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="Sub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <boolProp name="mqtt.debug_response">true</boolProp>
              <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
              <stringProp name="mqtt.sample_condition_value">6000</stringProp>
            </net.xmeter.samplers.SubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1985609380">hello emqx!!!!!</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="deny user sub/pub" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty ACL Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_acl;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert ACL Data" enabled="true">
              <stringProp name="TestPlan.comments">deny user sub/pub</stringProp>
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO mqtt_acl (allow, ipaddr, username, clientid, access, topic) VALUES (0, null, &apos;${data_user}&apos;, NULL, 3, &apos;#&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">$delayed/2/${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">String</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent">hello emqx!!!!!</stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-776774548">uccessfuly</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="Sub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <boolProp name="mqtt.debug_response">true</boolProp>
              <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
              <stringProp name="mqtt.sample_condition_value">6000</stringProp>
            </net.xmeter.samplers.SubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1985609380">hello emqx!!!!!</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="deny clientid sub/pub" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty ACL Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_acl;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert ACL Data" enabled="true">
              <stringProp name="TestPlan.comments">deny clientid sub/pub</stringProp>
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO mqtt_acl (allow, ipaddr, username, clientid, access, topic) VALUES (0, null, null, &apos;${client_id}_1&apos;, 3, &apos;#&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert ACL Data" enabled="true">
              <stringProp name="TestPlan.comments">deny clientid sub/pub</stringProp>
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO mqtt_acl (allow, ipaddr, username, clientid, access, topic) VALUES (0, null, null, &apos;${client_id}_2&apos;, 3, &apos;#&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">${client_id}_1</stringProp>
              <boolProp name="mqtt.client_id_suffix">false</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">$delayed/3/${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">String</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent">hello emqx!!!!!</stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-776774548">uccessfuly</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="Sub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <boolProp name="mqtt.debug_response">true</boolProp>
              <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
              <stringProp name="mqtt.sample_condition_value">6000</stringProp>
            </net.xmeter.samplers.SubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1985609380">hello emqx!!!!!</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="deny all sub" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty ACL Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_acl;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert ACL Data" enabled="true">
              <stringProp name="TestPlan.comments">deny all user sub/pub</stringProp>
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO mqtt_acl (allow, ipaddr, username, clientid, access, topic) VALUES (0, null, &apos;${data_user}&apos;, null, 1, &apos;#&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="pub ckeck" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
                <stringProp name="mqtt.server">${emqx_ip}</stringProp>
                <stringProp name="mqtt.port">1883</stringProp>
                <stringProp name="mqtt.version">3.1</stringProp>
                <stringProp name="mqtt.conn_timeout">10</stringProp>
                <stringProp name="mqtt.protocol">TCP</stringProp>
                <stringProp name="mqtt.ws_path">/mqtt</stringProp>
                <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
                <stringProp name="mqtt.clientcert_file_path"></stringProp>
                <stringProp name="mqtt.clientcert_password"></stringProp>
                <stringProp name="mqtt.user_name">${data_user}</stringProp>
                <stringProp name="mqtt.password">${data_pwd}</stringProp>
                <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
                <boolProp name="mqtt.client_id_suffix">true</boolProp>
                <stringProp name="mqtt.conn_keep_alive">300</stringProp>
                <stringProp name="mqtt.conn_attampt_max">0</stringProp>
                <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
                <stringProp name="mqtt.conn_clean_session">true</stringProp>
              </net.xmeter.samplers.ConnectSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">1000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1259833018">Successful</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="Pub Sampler" enabled="true">
                <stringProp name="mqtt.topic_name">$delayed/3/${topic}</stringProp>
                <stringProp name="mqtt.qos_level">0</stringProp>
                <boolProp name="mqtt.add_timestamp">false</boolProp>
                <stringProp name="mqtt.message_type">String</stringProp>
                <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
                <stringProp name="mqtt.message_to_sent">hello emqx!!!!!</stringProp>
                <boolProp name="mqtt.retained_message">false</boolProp>
              </net.xmeter.samplers.PubSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-776774548">uccessfuly</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1259833018">Successful</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
                <stringProp name="mqtt.server">${emqx_ip}</stringProp>
                <stringProp name="mqtt.port">1883</stringProp>
                <stringProp name="mqtt.version">3.1</stringProp>
                <stringProp name="mqtt.conn_timeout">10</stringProp>
                <stringProp name="mqtt.protocol">TCP</stringProp>
                <stringProp name="mqtt.ws_path">/mqtt</stringProp>
                <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
                <stringProp name="mqtt.clientcert_file_path"></stringProp>
                <stringProp name="mqtt.clientcert_password"></stringProp>
                <stringProp name="mqtt.user_name">${data_user}_1</stringProp>
                <stringProp name="mqtt.password">${data_pwd}</stringProp>
                <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
                <boolProp name="mqtt.client_id_suffix">true</boolProp>
                <stringProp name="mqtt.conn_keep_alive">300</stringProp>
                <stringProp name="mqtt.conn_attampt_max">0</stringProp>
                <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
                <stringProp name="mqtt.conn_clean_session">true</stringProp>
              </net.xmeter.samplers.ConnectSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">300</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1259833018">Successful</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="Sub Sampler" enabled="true">
                <stringProp name="mqtt.topic_name">${topic}</stringProp>
                <stringProp name="mqtt.qos_level">0</stringProp>
                <boolProp name="mqtt.add_timestamp">false</boolProp>
                <boolProp name="mqtt.debug_response">true</boolProp>
                <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
                <stringProp name="mqtt.sample_condition_value">6000</stringProp>
              </net.xmeter.samplers.SubSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1985609380">hello emqx!!!!!</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1259833018">Successful</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="sub ckeck" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
                <stringProp name="mqtt.server">${emqx_ip}</stringProp>
                <stringProp name="mqtt.port">1883</stringProp>
                <stringProp name="mqtt.version">3.1</stringProp>
                <stringProp name="mqtt.conn_timeout">10</stringProp>
                <stringProp name="mqtt.protocol">TCP</stringProp>
                <stringProp name="mqtt.ws_path">/mqtt</stringProp>
                <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
                <stringProp name="mqtt.clientcert_file_path"></stringProp>
                <stringProp name="mqtt.clientcert_password"></stringProp>
                <stringProp name="mqtt.user_name">${data_user}_1</stringProp>
                <stringProp name="mqtt.password">${data_pwd}</stringProp>
                <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
                <boolProp name="mqtt.client_id_suffix">true</boolProp>
                <stringProp name="mqtt.conn_keep_alive">300</stringProp>
                <stringProp name="mqtt.conn_attampt_max">0</stringProp>
                <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
                <stringProp name="mqtt.conn_clean_session">true</stringProp>
              </net.xmeter.samplers.ConnectSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">300</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1259833018">Successful</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="Pub Sampler" enabled="true">
                <stringProp name="mqtt.topic_name">$delayed/3/${topic}</stringProp>
                <stringProp name="mqtt.qos_level">0</stringProp>
                <boolProp name="mqtt.add_timestamp">false</boolProp>
                <stringProp name="mqtt.message_type">String</stringProp>
                <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
                <stringProp name="mqtt.message_to_sent">hello emqx!!!!!</stringProp>
                <boolProp name="mqtt.retained_message">false</boolProp>
              </net.xmeter.samplers.PubSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-776774548">uccessfuly</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1259833018">Successful</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
                <stringProp name="mqtt.server">${emqx_ip}</stringProp>
                <stringProp name="mqtt.port">1883</stringProp>
                <stringProp name="mqtt.version">3.1</stringProp>
                <stringProp name="mqtt.conn_timeout">10</stringProp>
                <stringProp name="mqtt.protocol">TCP</stringProp>
                <stringProp name="mqtt.ws_path">/mqtt</stringProp>
                <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
                <stringProp name="mqtt.clientcert_file_path"></stringProp>
                <stringProp name="mqtt.clientcert_password"></stringProp>
                <stringProp name="mqtt.user_name">${data_user}</stringProp>
                <stringProp name="mqtt.password">${data_pwd}</stringProp>
                <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
                <boolProp name="mqtt.client_id_suffix">true</boolProp>
                <stringProp name="mqtt.conn_keep_alive">300</stringProp>
                <stringProp name="mqtt.conn_attampt_max">0</stringProp>
                <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
                <stringProp name="mqtt.conn_clean_session">true</stringProp>
              </net.xmeter.samplers.ConnectSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">300</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1259833018">Successful</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="Sub Sampler" enabled="true">
                <stringProp name="mqtt.topic_name">${topic}</stringProp>
                <stringProp name="mqtt.qos_level">0</stringProp>
                <boolProp name="mqtt.add_timestamp">false</boolProp>
                <boolProp name="mqtt.debug_response">true</boolProp>
                <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
                <stringProp name="mqtt.sample_condition_value">6000</stringProp>
              </net.xmeter.samplers.SubSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1985609380">hello emqx!!!!!</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1259833018">Successful</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="deny all pub" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty ACL Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_acl;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert ACL Data" enabled="true">
              <stringProp name="TestPlan.comments">deny all user pub</stringProp>
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO mqtt_acl (allow, ipaddr, username, clientid, access, topic) VALUES (0, null, &apos;${data_user}&apos;, null, 2, &apos;#&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="pub check" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
                <stringProp name="mqtt.server">${emqx_ip}</stringProp>
                <stringProp name="mqtt.port">1883</stringProp>
                <stringProp name="mqtt.version">3.1</stringProp>
                <stringProp name="mqtt.conn_timeout">10</stringProp>
                <stringProp name="mqtt.protocol">TCP</stringProp>
                <stringProp name="mqtt.ws_path">/mqtt</stringProp>
                <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
                <stringProp name="mqtt.clientcert_file_path"></stringProp>
                <stringProp name="mqtt.clientcert_password"></stringProp>
                <stringProp name="mqtt.user_name">${data_user}</stringProp>
                <stringProp name="mqtt.password">${data_pwd}</stringProp>
                <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
                <boolProp name="mqtt.client_id_suffix">true</boolProp>
                <stringProp name="mqtt.conn_keep_alive">300</stringProp>
                <stringProp name="mqtt.conn_attampt_max">0</stringProp>
                <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
                <stringProp name="mqtt.conn_clean_session">true</stringProp>
              </net.xmeter.samplers.ConnectSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">1000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1259833018">Successful</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="Pub Sampler" enabled="true">
                <stringProp name="mqtt.topic_name">$delayed/3/${topic}</stringProp>
                <stringProp name="mqtt.qos_level">0</stringProp>
                <boolProp name="mqtt.add_timestamp">false</boolProp>
                <stringProp name="mqtt.message_type">String</stringProp>
                <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
                <stringProp name="mqtt.message_to_sent">hello emqx!!!!!</stringProp>
                <boolProp name="mqtt.retained_message">false</boolProp>
              </net.xmeter.samplers.PubSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-776774548">uccessfuly</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">1000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1259833018">Successful</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
                <stringProp name="mqtt.server">${emqx_ip}</stringProp>
                <stringProp name="mqtt.port">1883</stringProp>
                <stringProp name="mqtt.version">3.1</stringProp>
                <stringProp name="mqtt.conn_timeout">10</stringProp>
                <stringProp name="mqtt.protocol">TCP</stringProp>
                <stringProp name="mqtt.ws_path">/mqtt</stringProp>
                <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
                <stringProp name="mqtt.clientcert_file_path"></stringProp>
                <stringProp name="mqtt.clientcert_password"></stringProp>
                <stringProp name="mqtt.user_name">${data_user}_1</stringProp>
                <stringProp name="mqtt.password">${data_pwd}</stringProp>
                <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
                <boolProp name="mqtt.client_id_suffix">true</boolProp>
                <stringProp name="mqtt.conn_keep_alive">300</stringProp>
                <stringProp name="mqtt.conn_attampt_max">0</stringProp>
                <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
                <stringProp name="mqtt.conn_clean_session">true</stringProp>
              </net.xmeter.samplers.ConnectSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">1000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1259833018">Successful</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="Sub Sampler" enabled="true">
                <stringProp name="mqtt.topic_name">${topic}</stringProp>
                <stringProp name="mqtt.qos_level">0</stringProp>
                <boolProp name="mqtt.add_timestamp">false</boolProp>
                <boolProp name="mqtt.debug_response">true</boolProp>
                <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
                <stringProp name="mqtt.sample_condition_value">6000</stringProp>
              </net.xmeter.samplers.SubSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1985609380">hello emqx!!!!!</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1259833018">Successful</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="sub check" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
                <stringProp name="mqtt.server">${emqx_ip}</stringProp>
                <stringProp name="mqtt.port">1883</stringProp>
                <stringProp name="mqtt.version">3.1</stringProp>
                <stringProp name="mqtt.conn_timeout">10</stringProp>
                <stringProp name="mqtt.protocol">TCP</stringProp>
                <stringProp name="mqtt.ws_path">/mqtt</stringProp>
                <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
                <stringProp name="mqtt.clientcert_file_path"></stringProp>
                <stringProp name="mqtt.clientcert_password"></stringProp>
                <stringProp name="mqtt.user_name">${data_user}_1</stringProp>
                <stringProp name="mqtt.password">${data_pwd}</stringProp>
                <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
                <boolProp name="mqtt.client_id_suffix">true</boolProp>
                <stringProp name="mqtt.conn_keep_alive">300</stringProp>
                <stringProp name="mqtt.conn_attampt_max">0</stringProp>
                <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
                <stringProp name="mqtt.conn_clean_session">true</stringProp>
              </net.xmeter.samplers.ConnectSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">1000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1259833018">Successful</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="Pub Sampler" enabled="true">
                <stringProp name="mqtt.topic_name">$delayed/3/${topic}</stringProp>
                <stringProp name="mqtt.qos_level">0</stringProp>
                <boolProp name="mqtt.add_timestamp">false</boolProp>
                <stringProp name="mqtt.message_type">String</stringProp>
                <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
                <stringProp name="mqtt.message_to_sent">hello emqx!!!!!</stringProp>
                <boolProp name="mqtt.retained_message">false</boolProp>
              </net.xmeter.samplers.PubSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-776774548">uccessfuly</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1259833018">Successful</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
                <stringProp name="mqtt.server">${emqx_ip}</stringProp>
                <stringProp name="mqtt.port">1883</stringProp>
                <stringProp name="mqtt.version">3.1</stringProp>
                <stringProp name="mqtt.conn_timeout">10</stringProp>
                <stringProp name="mqtt.protocol">TCP</stringProp>
                <stringProp name="mqtt.ws_path">/mqtt</stringProp>
                <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
                <stringProp name="mqtt.clientcert_file_path"></stringProp>
                <stringProp name="mqtt.clientcert_password"></stringProp>
                <stringProp name="mqtt.user_name">${data_user}</stringProp>
                <stringProp name="mqtt.password">${data_pwd}</stringProp>
                <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
                <boolProp name="mqtt.client_id_suffix">true</boolProp>
                <stringProp name="mqtt.conn_keep_alive">300</stringProp>
                <stringProp name="mqtt.conn_attampt_max">0</stringProp>
                <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
                <stringProp name="mqtt.conn_clean_session">true</stringProp>
              </net.xmeter.samplers.ConnectSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">300</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1259833018">Successful</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="Sub Sampler" enabled="true">
                <stringProp name="mqtt.topic_name">${topic}</stringProp>
                <stringProp name="mqtt.qos_level">0</stringProp>
                <boolProp name="mqtt.add_timestamp">false</boolProp>
                <boolProp name="mqtt.debug_response">true</boolProp>
                <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
                <stringProp name="mqtt.sample_condition_value">6000</stringProp>
              </net.xmeter.samplers.SubSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1985609380">hello emqx!!!!!</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1259833018">Successful</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="deny all sub/pub check" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty ACL Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_acl;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert ACL Data" enabled="true">
              <stringProp name="TestPlan.comments">deny all user sub any topics</stringProp>
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO mqtt_acl (allow, ipaddr, username, clientid, access, topic) VALUES (0, NULL, &apos;$all&apos;, NULL, 3, &apos;#&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">$delayed/3/${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">String</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent">hello emqx!!!!!</stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-776774548">uccessfuly</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="Sub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <boolProp name="mqtt.debug_response">true</boolProp>
              <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
              <stringProp name="mqtt.sample_condition_value">6000</stringProp>
            </net.xmeter.samplers.SubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1985609380">hello emqx!!!!!</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Set Settings --acl_nomath as deny" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;mqtt_wildcard_subscription&quot;:&quot;true&quot;,&quot;mqtt_strict_mode&quot;:&quot;false&quot;,&quot;mqtt_shared_subscription&quot;:&quot;true&quot;,&quot;mqtt_retain_available&quot;:&quot;true&quot;,&quot;mqtt_max_topic_levels&quot;:&quot;0&quot;,&quot;mqtt_max_topic_alias&quot;:&quot;65535&quot;,&quot;mqtt_max_qos_allowed&quot;:&quot;2&quot;,&quot;mqtt_max_packet_size&quot;:&quot;1MB&quot;,&quot;mqtt_max_clientid_len&quot;:&quot;65535&quot;,&quot;mqtt_ignore_loop_deliver&quot;:&quot;false&quot;,&quot;flapping_detect_policy&quot;:&quot;30, 1m, 5m&quot;,&quot;enable_acl_cache&quot;:&quot;off&quot;,&quot;broker_sys_interval&quot;:&quot;1m&quot;,&quot;broker_sys_heartbeat&quot;:&quot;30s&quot;,&quot;broker_shared_subscription_strategy&quot;:&quot;random&quot;,&quot;broker_shared_dispatch_ack_enabled&quot;:&quot;false&quot;,&quot;broker_session_locking_strategy&quot;:&quot;quorum&quot;,&quot;allow_anonymous&quot;:&quot;true&quot;,&quot;acl_nomatch&quot;:&quot;deny&quot;,&quot;acl_deny_action&quot;:&quot;ignore&quot;,&quot;acl_cache_ttl&quot;:&quot;1m&quot;,&quot;acl_cache_max_size&quot;:&quot;32&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">18083</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${api_version}/configs/emqx</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">&quot;acl_nomatch&quot;:&quot;deny&quot;</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="67791721">&quot;code&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="empty acl check" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty ACL Table" enabled="true">
              <stringProp name="TestPlan.comments">delete all acl rules in mysql</stringProp>
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_acl;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">$delayed/3/${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">String</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent">hello emqx!!!!!</stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-776774548">uccessfuly</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="Sub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <boolProp name="mqtt.debug_response">true</boolProp>
              <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
              <stringProp name="mqtt.sample_condition_value">6000</stringProp>
            </net.xmeter.samplers.SubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1985609380">hello emqx!!!!!</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="allow user sub/pub" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty ACL Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_acl;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert ACL Rule" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO mqtt_acl (allow, ipaddr, username, clientid, access, topic) VALUES (1, null, &apos;${data_user}&apos;, NULL, 3, &apos;#&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">$delayed/3/${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">String</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent">hello emqx!!!!!</stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-776774548">uccessfuly</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="Sub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <boolProp name="mqtt.debug_response">true</boolProp>
              <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
              <stringProp name="mqtt.sample_condition_value">6000</stringProp>
            </net.xmeter.samplers.SubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1985609380">hello emqx!!!!!</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="allow clientid sub/pub" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty ACL Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_acl;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert ACL Rule" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO mqtt_acl (allow, ipaddr, username, clientid, access, topic) VALUES (1, null, null, &apos;${client_id}_1&apos;, 3, &apos;#&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">${client_id}_1</stringProp>
              <boolProp name="mqtt.client_id_suffix">false</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">$delayed/3/${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">String</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent">hello emqx!!!!!</stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-776774548">uccessfuly</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="Sub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <boolProp name="mqtt.debug_response">true</boolProp>
              <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
              <stringProp name="mqtt.sample_condition_value">6000</stringProp>
            </net.xmeter.samplers.SubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1985609380">hello emqx!!!!!</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="allow all sub check" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty ACL Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_acl;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert ACL Rule" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO mqtt_acl (allow, ipaddr, username, clientid, access, topic) VALUES (1, null, &apos;${data_user}&apos;, null, 1, &apos;#&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert ACL Rule" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO mqtt_acl (allow, ipaddr, username, clientid, access, topic) VALUES (1, null, &apos;${data_user}_1&apos;, null, 2, &apos;#&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="sub check" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
                <stringProp name="mqtt.server">${emqx_ip}</stringProp>
                <stringProp name="mqtt.port">1883</stringProp>
                <stringProp name="mqtt.version">3.1</stringProp>
                <stringProp name="mqtt.conn_timeout">10</stringProp>
                <stringProp name="mqtt.protocol">TCP</stringProp>
                <stringProp name="mqtt.ws_path">/mqtt</stringProp>
                <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
                <stringProp name="mqtt.clientcert_file_path"></stringProp>
                <stringProp name="mqtt.clientcert_password"></stringProp>
                <stringProp name="mqtt.user_name">${data_user}_1</stringProp>
                <stringProp name="mqtt.password">${data_pwd}</stringProp>
                <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
                <boolProp name="mqtt.client_id_suffix">true</boolProp>
                <stringProp name="mqtt.conn_keep_alive">300</stringProp>
                <stringProp name="mqtt.conn_attampt_max">0</stringProp>
                <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
                <stringProp name="mqtt.conn_clean_session">true</stringProp>
              </net.xmeter.samplers.ConnectSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">1000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1259833018">Successful</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="Pub Sampler" enabled="true">
                <stringProp name="mqtt.topic_name">$delayed/3/${topic}</stringProp>
                <stringProp name="mqtt.qos_level">0</stringProp>
                <boolProp name="mqtt.add_timestamp">false</boolProp>
                <stringProp name="mqtt.message_type">String</stringProp>
                <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
                <stringProp name="mqtt.message_to_sent">hello emqx!!!!!</stringProp>
                <boolProp name="mqtt.retained_message">false</boolProp>
              </net.xmeter.samplers.PubSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-776774548">uccessfuly</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">1000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1259833018">Successful</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
                <stringProp name="mqtt.server">${emqx_ip}</stringProp>
                <stringProp name="mqtt.port">1883</stringProp>
                <stringProp name="mqtt.version">3.1</stringProp>
                <stringProp name="mqtt.conn_timeout">10</stringProp>
                <stringProp name="mqtt.protocol">TCP</stringProp>
                <stringProp name="mqtt.ws_path">/mqtt</stringProp>
                <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
                <stringProp name="mqtt.clientcert_file_path"></stringProp>
                <stringProp name="mqtt.clientcert_password"></stringProp>
                <stringProp name="mqtt.user_name">${data_user}</stringProp>
                <stringProp name="mqtt.password">${data_pwd}</stringProp>
                <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
                <boolProp name="mqtt.client_id_suffix">true</boolProp>
                <stringProp name="mqtt.conn_keep_alive">300</stringProp>
                <stringProp name="mqtt.conn_attampt_max">0</stringProp>
                <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
                <stringProp name="mqtt.conn_clean_session">true</stringProp>
              </net.xmeter.samplers.ConnectSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">300</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1259833018">Successful</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="Sub Sampler" enabled="true">
                <stringProp name="mqtt.topic_name">${topic}</stringProp>
                <stringProp name="mqtt.qos_level">0</stringProp>
                <boolProp name="mqtt.add_timestamp">false</boolProp>
                <boolProp name="mqtt.debug_response">true</boolProp>
                <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
                <stringProp name="mqtt.sample_condition_value">6000</stringProp>
              </net.xmeter.samplers.SubSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1985609380">hello emqx!!!!!</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1259833018">Successful</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="pub check" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
                <stringProp name="mqtt.server">${emqx_ip}</stringProp>
                <stringProp name="mqtt.port">1883</stringProp>
                <stringProp name="mqtt.version">3.1</stringProp>
                <stringProp name="mqtt.conn_timeout">10</stringProp>
                <stringProp name="mqtt.protocol">TCP</stringProp>
                <stringProp name="mqtt.ws_path">/mqtt</stringProp>
                <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
                <stringProp name="mqtt.clientcert_file_path"></stringProp>
                <stringProp name="mqtt.clientcert_password"></stringProp>
                <stringProp name="mqtt.user_name">${data_user}</stringProp>
                <stringProp name="mqtt.password">${data_pwd}</stringProp>
                <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
                <boolProp name="mqtt.client_id_suffix">true</boolProp>
                <stringProp name="mqtt.conn_keep_alive">300</stringProp>
                <stringProp name="mqtt.conn_attampt_max">0</stringProp>
                <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
                <stringProp name="mqtt.conn_clean_session">true</stringProp>
              </net.xmeter.samplers.ConnectSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">1000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1259833018">Successful</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="Pub Sampler" enabled="true">
                <stringProp name="mqtt.topic_name">$delayed/3/${topic}</stringProp>
                <stringProp name="mqtt.qos_level">0</stringProp>
                <boolProp name="mqtt.add_timestamp">false</boolProp>
                <stringProp name="mqtt.message_type">String</stringProp>
                <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
                <stringProp name="mqtt.message_to_sent">hello emqx!!!!!</stringProp>
                <boolProp name="mqtt.retained_message">false</boolProp>
              </net.xmeter.samplers.PubSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-776774548">uccessfuly</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="Sub Sampler" enabled="true">
                <stringProp name="mqtt.topic_name">${topic}</stringProp>
                <stringProp name="mqtt.qos_level">0</stringProp>
                <boolProp name="mqtt.add_timestamp">false</boolProp>
                <boolProp name="mqtt.debug_response">true</boolProp>
                <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
                <stringProp name="mqtt.sample_condition_value">6000</stringProp>
              </net.xmeter.samplers.SubSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1985609380">hello emqx!!!!!</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1259833018">Successful</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="allow all pub" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty ACL Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_acl;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert ACL Rule" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO mqtt_acl (allow, ipaddr, username, clientid, access, topic) VALUES (1, null, &apos;${data_user}&apos;, null, 2, &apos;#&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert ACL Rule" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO mqtt_acl (allow, ipaddr, username, clientid, access, topic) VALUES (1, null, &apos;${data_user}_1&apos;, null, 1, &apos;#&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="pub check" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
                <stringProp name="mqtt.server">${emqx_ip}</stringProp>
                <stringProp name="mqtt.port">1883</stringProp>
                <stringProp name="mqtt.version">3.1</stringProp>
                <stringProp name="mqtt.conn_timeout">10</stringProp>
                <stringProp name="mqtt.protocol">TCP</stringProp>
                <stringProp name="mqtt.ws_path">/mqtt</stringProp>
                <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
                <stringProp name="mqtt.clientcert_file_path"></stringProp>
                <stringProp name="mqtt.clientcert_password"></stringProp>
                <stringProp name="mqtt.user_name">${data_user}</stringProp>
                <stringProp name="mqtt.password">${data_pwd}</stringProp>
                <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
                <boolProp name="mqtt.client_id_suffix">true</boolProp>
                <stringProp name="mqtt.conn_keep_alive">300</stringProp>
                <stringProp name="mqtt.conn_attampt_max">0</stringProp>
                <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
                <stringProp name="mqtt.conn_clean_session">true</stringProp>
              </net.xmeter.samplers.ConnectSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">1000</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1259833018">Successful</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="Pub Sampler" enabled="true">
                <stringProp name="mqtt.topic_name">$delayed/3/${topic}</stringProp>
                <stringProp name="mqtt.qos_level">0</stringProp>
                <boolProp name="mqtt.add_timestamp">false</boolProp>
                <stringProp name="mqtt.message_type">String</stringProp>
                <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
                <stringProp name="mqtt.message_to_sent">hello emqx!!!!!</stringProp>
                <boolProp name="mqtt.retained_message">false</boolProp>
              </net.xmeter.samplers.PubSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-776774548">uccessfuly</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1259833018">Successful</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
                <stringProp name="mqtt.server">${emqx_ip}</stringProp>
                <stringProp name="mqtt.port">1883</stringProp>
                <stringProp name="mqtt.version">3.1</stringProp>
                <stringProp name="mqtt.conn_timeout">10</stringProp>
                <stringProp name="mqtt.protocol">TCP</stringProp>
                <stringProp name="mqtt.ws_path">/mqtt</stringProp>
                <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
                <stringProp name="mqtt.clientcert_file_path"></stringProp>
                <stringProp name="mqtt.clientcert_password"></stringProp>
                <stringProp name="mqtt.user_name">${data_user}_1</stringProp>
                <stringProp name="mqtt.password">${data_pwd}</stringProp>
                <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
                <boolProp name="mqtt.client_id_suffix">true</boolProp>
                <stringProp name="mqtt.conn_keep_alive">300</stringProp>
                <stringProp name="mqtt.conn_attampt_max">0</stringProp>
                <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
                <stringProp name="mqtt.conn_clean_session">true</stringProp>
              </net.xmeter.samplers.ConnectSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">300</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1259833018">Successful</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="Sub Sampler" enabled="true">
                <stringProp name="mqtt.topic_name">${topic}</stringProp>
                <stringProp name="mqtt.qos_level">0</stringProp>
                <boolProp name="mqtt.add_timestamp">false</boolProp>
                <boolProp name="mqtt.debug_response">true</boolProp>
                <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
                <stringProp name="mqtt.sample_condition_value">6000</stringProp>
              </net.xmeter.samplers.SubSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1985609380">hello emqx!!!!!</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1259833018">Successful</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="sub check" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
                <stringProp name="mqtt.server">${emqx_ip}</stringProp>
                <stringProp name="mqtt.port">1883</stringProp>
                <stringProp name="mqtt.version">3.1</stringProp>
                <stringProp name="mqtt.conn_timeout">10</stringProp>
                <stringProp name="mqtt.protocol">TCP</stringProp>
                <stringProp name="mqtt.ws_path">/mqtt</stringProp>
                <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
                <stringProp name="mqtt.clientcert_file_path"></stringProp>
                <stringProp name="mqtt.clientcert_password"></stringProp>
                <stringProp name="mqtt.user_name">${data_user}</stringProp>
                <stringProp name="mqtt.password">${data_pwd}</stringProp>
                <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
                <boolProp name="mqtt.client_id_suffix">true</boolProp>
                <stringProp name="mqtt.conn_keep_alive">300</stringProp>
                <stringProp name="mqtt.conn_attampt_max">0</stringProp>
                <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
                <stringProp name="mqtt.conn_clean_session">true</stringProp>
              </net.xmeter.samplers.ConnectSampler>
              <hashTree>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">300</stringProp>
                </ConstantTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1259833018">Successful</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="Pub Sampler" enabled="true">
                <stringProp name="mqtt.topic_name">$delayed/3/${topic}</stringProp>
                <stringProp name="mqtt.qos_level">0</stringProp>
                <boolProp name="mqtt.add_timestamp">false</boolProp>
                <stringProp name="mqtt.message_type">String</stringProp>
                <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
                <stringProp name="mqtt.message_to_sent">hello emqx!!!!!</stringProp>
                <boolProp name="mqtt.retained_message">false</boolProp>
              </net.xmeter.samplers.PubSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-776774548">uccessfuly</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">300</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="Sub Sampler" enabled="true">
                <stringProp name="mqtt.topic_name">${topic}</stringProp>
                <stringProp name="mqtt.qos_level">0</stringProp>
                <boolProp name="mqtt.add_timestamp">false</boolProp>
                <boolProp name="mqtt.debug_response">true</boolProp>
                <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
                <stringProp name="mqtt.sample_condition_value">6000</stringProp>
              </net.xmeter.samplers.SubSampler>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1985609380">hello emqx!!!!!</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1259833018">Successful</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="allow all sub/pub check" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty ACL Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_acl;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert ACL Rule" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO mqtt_acl (allow, ipaddr, username, clientid, access, topic) VALUES (1, NULL, &apos;$all&apos;, NULL, 3, &apos;#&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.PubSampler guiclass="net.xmeter.gui.PubSamplerUI" testclass="net.xmeter.samplers.PubSampler" testname="Pub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">$delayed/3/${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <stringProp name="mqtt.message_type">String</stringProp>
              <stringProp name="mqtt.message_type_fixed_length">1024</stringProp>
              <stringProp name="mqtt.message_to_sent">hello emqx!!!!!</stringProp>
              <boolProp name="mqtt.retained_message">false</boolProp>
            </net.xmeter.samplers.PubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-776774548">uccessfuly</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.SubSampler guiclass="net.xmeter.gui.SubSamplerUI" testclass="net.xmeter.samplers.SubSampler" testname="Sub Sampler" enabled="true">
              <stringProp name="mqtt.topic_name">${topic}</stringProp>
              <stringProp name="mqtt.qos_level">0</stringProp>
              <boolProp name="mqtt.add_timestamp">false</boolProp>
              <boolProp name="mqtt.debug_response">true</boolProp>
              <stringProp name="mqtt.sample_condition">specified elapsed time (ms)</stringProp>
              <stringProp name="mqtt.sample_condition_value">6000</stringProp>
            </net.xmeter.samplers.SubSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1985609380">hello emqx!!!!!</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="authn password hash test" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Set Settings" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;mqtt_wildcard_subscription&quot;:&quot;true&quot;,&quot;mqtt_strict_mode&quot;:&quot;false&quot;,&quot;mqtt_shared_subscription&quot;:&quot;true&quot;,&quot;mqtt_retain_available&quot;:&quot;true&quot;,&quot;mqtt_max_topic_levels&quot;:&quot;0&quot;,&quot;mqtt_max_topic_alias&quot;:&quot;65535&quot;,&quot;mqtt_max_qos_allowed&quot;:&quot;2&quot;,&quot;mqtt_max_packet_size&quot;:&quot;1MB&quot;,&quot;mqtt_max_clientid_len&quot;:&quot;65535&quot;,&quot;mqtt_ignore_loop_deliver&quot;:&quot;false&quot;,&quot;flapping_detect_policy&quot;:&quot;30, 1m, 5m&quot;,&quot;enable_acl_cache&quot;:&quot;off&quot;,&quot;broker_sys_interval&quot;:&quot;1m&quot;,&quot;broker_sys_heartbeat&quot;:&quot;30s&quot;,&quot;broker_shared_subscription_strategy&quot;:&quot;random&quot;,&quot;broker_shared_dispatch_ack_enabled&quot;:&quot;false&quot;,&quot;broker_session_locking_strategy&quot;:&quot;quorum&quot;,&quot;allow_anonymous&quot;:&quot;false&quot;,&quot;acl_nomatch&quot;:&quot;deny&quot;,&quot;acl_deny_action&quot;:&quot;ignore&quot;,&quot;acl_cache_ttl&quot;:&quot;1m&quot;,&quot;acl_cache_max_size&quot;:&quot;32&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port">18083</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">${api_version}/configs/emqx</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">&quot;allow_anonymous&quot;:&quot;false&quot;,&quot;enable_acl_cache&quot;:&quot;off&quot;,&quot;acl_nomatch&quot;:&quot;deny&quot;</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="67791721">&quot;code&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="salt+plain auth check" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty Auth Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_user;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-234430262">updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert Auth Data" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO `mqtt_user` ( `username`, `password`, `salt`) VALUES (&apos;${data_user}&apos;,&apos;123${data_pwd}&apos;,&apos;${salt}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Module ID" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="ser_defined_variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">mysql_mo_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[?(@.type=~/.*mysql_authentication.*/)].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">err_mysql_mo_id</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change Rule" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;type&quot;:&quot;mysql_authentication&quot;,&quot;id&quot;:&quot;${mysql_mo_id}&quot;,&quot;enabled&quot;:true,&quot;description&quot;:{&quot;zh&quot;:&quot;MySQL 认证/访问控制&quot;,&quot;en&quot;:&quot;MySQL AUTH/ACL&quot;},&quot;config&quot;:{&quot;server&quot;:&quot;${mysql_ip}:${ssl_mysql_port}&quot;,&quot;database&quot;:&quot;${database}&quot;,&quot;pool_size&quot;:8,&quot;user&quot;:&quot;${ssl_mysql_user}&quot;,&quot;password&quot;:&quot;${ssl_mysql_pwd}&quot;,&quot;auto_reconnect&quot;:true,&quot;password_hash&quot;:&quot;salt,plain&quot;,&quot;auth_query&quot;:&quot;select password,salt from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;acl_query&quot;:&quot;select allow, ipaddr, username, clientid, access, topic from mqtt_acl where ipaddr = &apos;%a&apos; or username = &apos;%u&apos; or username = &apos;$all&apos; or clientid = &apos;%c&apos;&quot;,&quot;super_query&quot;:&quot;select is_superuser from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;query_timeout&quot;:&quot;5s&quot;,&quot;ssl&quot;:true,&quot;cacertfile&quot;:{&quot;filename&quot;:&quot;ca.pem&quot;,&quot;file&quot;:&quot;${ca}\u0000&quot;},&quot;keyfile&quot;:{&quot;filename&quot;:&quot;client-key.pem&quot;,&quot;file&quot;:&quot;${client_key}\u0000&quot;},&quot;certfile&quot;:{&quot;filename&quot;:&quot;client-cert.pem&quot;,&quot;file&quot;:&quot;${client_cert}\u0000&quot;},&quot;verify&quot;:false}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules/${mysql_mo_id}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">sha256+salt</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="plain+salt auth check" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty Auth Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_user;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-234430262">updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert Auth Data" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO `mqtt_user` ( `username`, `password`, `salt`) VALUES (&apos;${data_user}&apos;,&apos;${data_pwd}123&apos;,&apos;${salt}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Module ID" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="ser_defined_variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">mysql_mo_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[?(@.type=~/.*mysql_authentication.*/)].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">err_mysql_mo_id</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change Rule" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;type&quot;:&quot;mysql_authentication&quot;,&quot;id&quot;:&quot;${mysql_mo_id}&quot;,&quot;enabled&quot;:true,&quot;description&quot;:{&quot;zh&quot;:&quot;MySQL 认证/访问控制&quot;,&quot;en&quot;:&quot;MySQL AUTH/ACL&quot;},&quot;config&quot;:{&quot;server&quot;:&quot;${mysql_ip}:${ssl_mysql_port}&quot;,&quot;database&quot;:&quot;${database}&quot;,&quot;pool_size&quot;:8,&quot;user&quot;:&quot;${ssl_mysql_user}&quot;,&quot;password&quot;:&quot;${ssl_mysql_pwd}&quot;,&quot;auto_reconnect&quot;:true,&quot;password_hash&quot;:&quot;plain,salt&quot;,&quot;auth_query&quot;:&quot;select password,salt from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;acl_query&quot;:&quot;select allow, ipaddr, username, clientid, access, topic from mqtt_acl where ipaddr = &apos;%a&apos; or username = &apos;%u&apos; or username = &apos;$all&apos; or clientid = &apos;%c&apos;&quot;,&quot;super_query&quot;:&quot;select is_superuser from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;query_timeout&quot;:&quot;5s&quot;,&quot;ssl&quot;:true,&quot;cacertfile&quot;:{&quot;filename&quot;:&quot;ca.pem&quot;,&quot;file&quot;:&quot;${ca}\u0000&quot;},&quot;keyfile&quot;:{&quot;filename&quot;:&quot;client-key.pem&quot;,&quot;file&quot;:&quot;${client_key}\u0000&quot;},&quot;certfile&quot;:{&quot;filename&quot;:&quot;client-cert.pem&quot;,&quot;file&quot;:&quot;${client_cert}\u0000&quot;},&quot;verify&quot;:false}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules/${mysql_mo_id}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">sha256+salt</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">1000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="sha256 auth check" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty Auth Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_user;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-234430262">updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert Auth Data" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO `mqtt_user` ( `username`, `password`, `salt`) VALUES (&apos;${data_user}&apos;,&apos;${sha256}&apos;,&apos;${salt}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Module ID" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="ser_defined_variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">mysql_mo_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[?(@.type=~/.*mysql_authentication.*/)].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">err_mysql_mo_id</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change Rule" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;type&quot;:&quot;mysql_authentication&quot;,&quot;id&quot;:&quot;${mysql_mo_id}&quot;,&quot;enabled&quot;:true,&quot;description&quot;:{&quot;zh&quot;:&quot;MySQL 认证/访问控制&quot;,&quot;en&quot;:&quot;MySQL AUTH/ACL&quot;},&quot;config&quot;:{&quot;server&quot;:&quot;${mysql_ip}:${ssl_mysql_port}&quot;,&quot;database&quot;:&quot;${database}&quot;,&quot;pool_size&quot;:8,&quot;user&quot;:&quot;${ssl_mysql_user}&quot;,&quot;password&quot;:&quot;${ssl_mysql_pwd}&quot;,&quot;auto_reconnect&quot;:true,&quot;password_hash&quot;:&quot;sha256&quot;,&quot;auth_query&quot;:&quot;select password from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;acl_query&quot;:&quot;select allow, ipaddr, username, clientid, access, topic from mqtt_acl where ipaddr = &apos;%a&apos; or username = &apos;%u&apos; or username = &apos;$all&apos; or clientid = &apos;%c&apos;&quot;,&quot;super_query&quot;:&quot;select is_superuser from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;query_timeout&quot;:&quot;5s&quot;,&quot;ssl&quot;:true,&quot;cacertfile&quot;:{&quot;filename&quot;:&quot;ca.pem&quot;,&quot;file&quot;:&quot;${ca}\u0000&quot;},&quot;keyfile&quot;:{&quot;filename&quot;:&quot;client-key.pem&quot;,&quot;file&quot;:&quot;${client_key}\u0000&quot;},&quot;certfile&quot;:{&quot;filename&quot;:&quot;client-cert.pem&quot;,&quot;file&quot;:&quot;${client_cert}\u0000&quot;},&quot;verify&quot;:false}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules/${mysql_mo_id}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">sha256+salt</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="sha256+salt auth check" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty Auth Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_user;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-234430262">updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert Auth Data" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO `mqtt_user` ( `username`, `password`, `salt`) VALUES (&apos;${data_user}&apos;,&apos;${sha256_salt}&apos;,&apos;${salt}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Module ID" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="ser_defined_variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">mysql_mo_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[?(@.type=~/.*mysql_authentication.*/)].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">err_mysql_mo_id</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change Rule" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;type&quot;:&quot;mysql_authentication&quot;,&quot;id&quot;:&quot;${mysql_mo_id}&quot;,&quot;enabled&quot;:true,&quot;description&quot;:{&quot;zh&quot;:&quot;MySQL 认证/访问控制&quot;,&quot;en&quot;:&quot;MySQL AUTH/ACL&quot;},&quot;config&quot;:{&quot;server&quot;:&quot;${mysql_ip}:${ssl_mysql_port}&quot;,&quot;database&quot;:&quot;${database}&quot;,&quot;pool_size&quot;:8,&quot;user&quot;:&quot;${ssl_mysql_user}&quot;,&quot;password&quot;:&quot;${ssl_mysql_pwd}&quot;,&quot;auto_reconnect&quot;:true,&quot;password_hash&quot;:&quot;sha256,salt&quot;,&quot;auth_query&quot;:&quot;select password,salt from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;acl_query&quot;:&quot;select allow, ipaddr, username, clientid, access, topic from mqtt_acl where ipaddr = &apos;%a&apos; or username = &apos;%u&apos; or username = &apos;$all&apos; or clientid = &apos;%c&apos;&quot;,&quot;super_query&quot;:&quot;select is_superuser from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;query_timeout&quot;:&quot;5s&quot;,&quot;ssl&quot;:true,&quot;cacertfile&quot;:{&quot;filename&quot;:&quot;ca.pem&quot;,&quot;file&quot;:&quot;${ca}\u0000&quot;},&quot;keyfile&quot;:{&quot;filename&quot;:&quot;client-key.pem&quot;,&quot;file&quot;:&quot;${client_key}\u0000&quot;},&quot;certfile&quot;:{&quot;filename&quot;:&quot;client-cert.pem&quot;,&quot;file&quot;:&quot;${client_cert}\u0000&quot;},&quot;verify&quot;:false}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules/${mysql_mo_id}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">sha256+salt</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="salt+sha256 auth check" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty Auth Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_user;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-234430262">updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert Auth Data" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO `mqtt_user` ( `username`, `password`, `salt`) VALUES (&apos;${data_user}&apos;,&apos;${salt_sha256}&apos;,&apos;${salt}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Module ID" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="ser_defined_variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">mysql_mo_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[?(@.type=~/.*mysql_authentication.*/)].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">err_mysql_mo_id</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change Rule" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;type&quot;:&quot;mysql_authentication&quot;,&quot;id&quot;:&quot;${mysql_mo_id}&quot;,&quot;enabled&quot;:true,&quot;description&quot;:{&quot;zh&quot;:&quot;MySQL 认证/访问控制&quot;,&quot;en&quot;:&quot;MySQL AUTH/ACL&quot;},&quot;config&quot;:{&quot;server&quot;:&quot;${mysql_ip}:${ssl_mysql_port}&quot;,&quot;database&quot;:&quot;${database}&quot;,&quot;pool_size&quot;:8,&quot;user&quot;:&quot;${ssl_mysql_user}&quot;,&quot;password&quot;:&quot;${ssl_mysql_pwd}&quot;,&quot;auto_reconnect&quot;:true,&quot;password_hash&quot;:&quot;salt,sha256&quot;,&quot;auth_query&quot;:&quot;select password,salt from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;acl_query&quot;:&quot;select allow, ipaddr, username, clientid, access, topic from mqtt_acl where ipaddr = &apos;%a&apos; or username = &apos;%u&apos; or username = &apos;$all&apos; or clientid = &apos;%c&apos;&quot;,&quot;super_query&quot;:&quot;select is_superuser from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;query_timeout&quot;:&quot;5s&quot;,&quot;ssl&quot;:true,&quot;cacertfile&quot;:{&quot;filename&quot;:&quot;ca.pem&quot;,&quot;file&quot;:&quot;${ca}\u0000&quot;},&quot;keyfile&quot;:{&quot;filename&quot;:&quot;client-key.pem&quot;,&quot;file&quot;:&quot;${client_key}\u0000&quot;},&quot;certfile&quot;:{&quot;filename&quot;:&quot;client-cert.pem&quot;,&quot;file&quot;:&quot;${client_cert}\u0000&quot;},&quot;verify&quot;:false}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules/${mysql_mo_id}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">sha256+salt</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="sha auth check" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty Auth Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_user;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-234430262">updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert Auth Data" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO `mqtt_user` ( `username`, `password`, `salt`) VALUES (&apos;${data_user}&apos;,&apos;${sha}&apos;,&apos;${salt}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Module ID" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="ser_defined_variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">mysql_mo_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[?(@.type=~/.*mysql_authentication.*/)].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">err_mysql_mo_id</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change Rule" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;type&quot;:&quot;mysql_authentication&quot;,&quot;id&quot;:&quot;${mysql_mo_id}&quot;,&quot;enabled&quot;:true,&quot;description&quot;:{&quot;zh&quot;:&quot;MySQL 认证/访问控制&quot;,&quot;en&quot;:&quot;MySQL AUTH/ACL&quot;},&quot;config&quot;:{&quot;server&quot;:&quot;${mysql_ip}:${ssl_mysql_port}&quot;,&quot;database&quot;:&quot;${database}&quot;,&quot;pool_size&quot;:8,&quot;user&quot;:&quot;${ssl_mysql_user}&quot;,&quot;password&quot;:&quot;${ssl_mysql_pwd}&quot;,&quot;auto_reconnect&quot;:true,&quot;password_hash&quot;:&quot;sha&quot;,&quot;auth_query&quot;:&quot;select password from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;acl_query&quot;:&quot;select allow, ipaddr, username, clientid, access, topic from mqtt_acl where ipaddr = &apos;%a&apos; or username = &apos;%u&apos; or username = &apos;$all&apos; or clientid = &apos;%c&apos;&quot;,&quot;super_query&quot;:&quot;select is_superuser from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;query_timeout&quot;:&quot;5s&quot;,&quot;ssl&quot;:true,&quot;cacertfile&quot;:{&quot;filename&quot;:&quot;ca.pem&quot;,&quot;file&quot;:&quot;${ca}\u0000&quot;},&quot;keyfile&quot;:{&quot;filename&quot;:&quot;client-key.pem&quot;,&quot;file&quot;:&quot;${client_key}\u0000&quot;},&quot;certfile&quot;:{&quot;filename&quot;:&quot;client-cert.pem&quot;,&quot;file&quot;:&quot;${client_cert}\u0000&quot;},&quot;verify&quot;:false}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules/${mysql_mo_id}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">sha256+salt</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="sha+salt auth check" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty Auth Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_user;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-234430262">updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert Auth Data" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO `mqtt_user` ( `username`, `password`, `salt`) VALUES (&apos;${data_user}&apos;,&apos;${sha_salt}&apos;,&apos;${salt}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Module ID" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="ser_defined_variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">mysql_mo_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[?(@.type=~/.*mysql_authentication.*/)].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">err_mysql_mo_id</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change Rule" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;type&quot;:&quot;mysql_authentication&quot;,&quot;id&quot;:&quot;${mysql_mo_id}&quot;,&quot;enabled&quot;:true,&quot;description&quot;:{&quot;zh&quot;:&quot;MySQL 认证/访问控制&quot;,&quot;en&quot;:&quot;MySQL AUTH/ACL&quot;},&quot;config&quot;:{&quot;server&quot;:&quot;${mysql_ip}:${ssl_mysql_port}&quot;,&quot;database&quot;:&quot;${database}&quot;,&quot;pool_size&quot;:8,&quot;user&quot;:&quot;${ssl_mysql_user}&quot;,&quot;password&quot;:&quot;${ssl_mysql_pwd}&quot;,&quot;auto_reconnect&quot;:true,&quot;password_hash&quot;:&quot;sha,salt&quot;,&quot;auth_query&quot;:&quot;select password,salt from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;acl_query&quot;:&quot;select allow, ipaddr, username, clientid, access, topic from mqtt_acl where ipaddr = &apos;%a&apos; or username = &apos;%u&apos; or username = &apos;$all&apos; or clientid = &apos;%c&apos;&quot;,&quot;super_query&quot;:&quot;select is_superuser from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;query_timeout&quot;:&quot;5s&quot;,&quot;ssl&quot;:true,&quot;cacertfile&quot;:{&quot;filename&quot;:&quot;ca.pem&quot;,&quot;file&quot;:&quot;${ca}\u0000&quot;},&quot;keyfile&quot;:{&quot;filename&quot;:&quot;client-key.pem&quot;,&quot;file&quot;:&quot;${client_key}\u0000&quot;},&quot;certfile&quot;:{&quot;filename&quot;:&quot;client-cert.pem&quot;,&quot;file&quot;:&quot;${client_cert}\u0000&quot;},&quot;verify&quot;:false}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules/${mysql_mo_id}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">sha256+salt</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="salt_sha auth check" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty Auth Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_user;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-234430262">updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert Auth Data" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO `mqtt_user` ( `username`, `password`, `salt`) VALUES (&apos;${data_user}&apos;,&apos;${salt_sha}&apos;,&apos;${salt}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Module ID" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="ser_defined_variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">mysql_mo_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[?(@.type=~/.*mysql_authentication.*/)].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">err_mysql_mo_id</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change Rule" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;type&quot;:&quot;mysql_authentication&quot;,&quot;id&quot;:&quot;${mysql_mo_id}&quot;,&quot;enabled&quot;:true,&quot;description&quot;:{&quot;zh&quot;:&quot;MySQL 认证/访问控制&quot;,&quot;en&quot;:&quot;MySQL AUTH/ACL&quot;},&quot;config&quot;:{&quot;server&quot;:&quot;${mysql_ip}:${ssl_mysql_port}&quot;,&quot;database&quot;:&quot;${database}&quot;,&quot;pool_size&quot;:8,&quot;user&quot;:&quot;${ssl_mysql_user}&quot;,&quot;password&quot;:&quot;${ssl_mysql_pwd}&quot;,&quot;auto_reconnect&quot;:true,&quot;password_hash&quot;:&quot;salt,sha&quot;,&quot;auth_query&quot;:&quot;select password,salt from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;acl_query&quot;:&quot;select allow, ipaddr, username, clientid, access, topic from mqtt_acl where ipaddr = &apos;%a&apos; or username = &apos;%u&apos; or username = &apos;$all&apos; or clientid = &apos;%c&apos;&quot;,&quot;super_query&quot;:&quot;select is_superuser from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;query_timeout&quot;:&quot;5s&quot;,&quot;ssl&quot;:true,&quot;cacertfile&quot;:{&quot;filename&quot;:&quot;ca.pem&quot;,&quot;file&quot;:&quot;${ca}\u0000&quot;},&quot;keyfile&quot;:{&quot;filename&quot;:&quot;client-key.pem&quot;,&quot;file&quot;:&quot;${client_key}\u0000&quot;},&quot;certfile&quot;:{&quot;filename&quot;:&quot;client-cert.pem&quot;,&quot;file&quot;:&quot;${client_cert}\u0000&quot;},&quot;verify&quot;:false}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules/${mysql_mo_id}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">sha256+salt</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="sha512 auth check" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty Auth Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_user;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-234430262">updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert Auth Data" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO `mqtt_user` ( `username`, `password`, `salt`) VALUES (&apos;${data_user}&apos;,&apos;${sha512}&apos;,&apos;${salt}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Module ID" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="ser_defined_variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">mysql_mo_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[?(@.type=~/.*mysql_authentication.*/)].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">err_mysql_mo_id</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change Rule" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;type&quot;:&quot;mysql_authentication&quot;,&quot;id&quot;:&quot;${mysql_mo_id}&quot;,&quot;enabled&quot;:true,&quot;description&quot;:{&quot;zh&quot;:&quot;MySQL 认证/访问控制&quot;,&quot;en&quot;:&quot;MySQL AUTH/ACL&quot;},&quot;config&quot;:{&quot;server&quot;:&quot;${mysql_ip}:${ssl_mysql_port}&quot;,&quot;database&quot;:&quot;${database}&quot;,&quot;pool_size&quot;:8,&quot;user&quot;:&quot;${ssl_mysql_user}&quot;,&quot;password&quot;:&quot;${ssl_mysql_pwd}&quot;,&quot;auto_reconnect&quot;:true,&quot;password_hash&quot;:&quot;sha512&quot;,&quot;auth_query&quot;:&quot;select password from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;acl_query&quot;:&quot;select allow, ipaddr, username, clientid, access, topic from mqtt_acl where ipaddr = &apos;%a&apos; or username = &apos;%u&apos; or username = &apos;$all&apos; or clientid = &apos;%c&apos;&quot;,&quot;super_query&quot;:&quot;select is_superuser from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;query_timeout&quot;:&quot;5s&quot;,&quot;ssl&quot;:true,&quot;cacertfile&quot;:{&quot;filename&quot;:&quot;ca.pem&quot;,&quot;file&quot;:&quot;${ca}\u0000&quot;},&quot;keyfile&quot;:{&quot;filename&quot;:&quot;client-key.pem&quot;,&quot;file&quot;:&quot;${client_key}\u0000&quot;},&quot;certfile&quot;:{&quot;filename&quot;:&quot;client-cert.pem&quot;,&quot;file&quot;:&quot;${client_cert}\u0000&quot;},&quot;verify&quot;:false}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules/${mysql_mo_id}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">sha256+salt</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="sha512+salt auth check" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty Auth Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_user;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-234430262">updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert Auth Data" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO `mqtt_user` ( `username`, `password`, `salt`) VALUES (&apos;${data_user}&apos;,&apos;${sha512_salt}&apos;,&apos;${salt}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Module ID" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="ser_defined_variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">mysql_mo_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[?(@.type=~/.*mysql_authentication.*/)].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">err_mysql_mo_id</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change Rule" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;type&quot;:&quot;mysql_authentication&quot;,&quot;id&quot;:&quot;${mysql_mo_id}&quot;,&quot;enabled&quot;:true,&quot;description&quot;:{&quot;zh&quot;:&quot;MySQL 认证/访问控制&quot;,&quot;en&quot;:&quot;MySQL AUTH/ACL&quot;},&quot;config&quot;:{&quot;server&quot;:&quot;${mysql_ip}:${ssl_mysql_port}&quot;,&quot;database&quot;:&quot;${database}&quot;,&quot;pool_size&quot;:8,&quot;user&quot;:&quot;${ssl_mysql_user}&quot;,&quot;password&quot;:&quot;${ssl_mysql_pwd}&quot;,&quot;auto_reconnect&quot;:true,&quot;password_hash&quot;:&quot;sha512,salt&quot;,&quot;auth_query&quot;:&quot;select password,salt from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;acl_query&quot;:&quot;select allow, ipaddr, username, clientid, access, topic from mqtt_acl where ipaddr = &apos;%a&apos; or username = &apos;%u&apos; or username = &apos;$all&apos; or clientid = &apos;%c&apos;&quot;,&quot;super_query&quot;:&quot;select is_superuser from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;query_timeout&quot;:&quot;5s&quot;,&quot;ssl&quot;:true,&quot;cacertfile&quot;:{&quot;filename&quot;:&quot;ca.pem&quot;,&quot;file&quot;:&quot;${ca}\u0000&quot;},&quot;keyfile&quot;:{&quot;filename&quot;:&quot;client-key.pem&quot;,&quot;file&quot;:&quot;${client_key}\u0000&quot;},&quot;certfile&quot;:{&quot;filename&quot;:&quot;client-cert.pem&quot;,&quot;file&quot;:&quot;${client_cert}\u0000&quot;},&quot;verify&quot;:false}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules/${mysql_mo_id}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">sha256+salt</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="salt+sha512 auth check" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty Auth Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_user;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-234430262">updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert Auth Data" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO `mqtt_user` ( `username`, `password`, `salt`) VALUES (&apos;${data_user}&apos;,&apos;${salt_sha512}&apos;,&apos;${salt}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Module ID" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="ser_defined_variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">mysql_mo_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[?(@.type=~/.*mysql_authentication.*/)].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">err_mysql_mo_id</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change Rule" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;type&quot;:&quot;mysql_authentication&quot;,&quot;id&quot;:&quot;${mysql_mo_id}&quot;,&quot;enabled&quot;:true,&quot;description&quot;:{&quot;zh&quot;:&quot;MySQL 认证/访问控制&quot;,&quot;en&quot;:&quot;MySQL AUTH/ACL&quot;},&quot;config&quot;:{&quot;server&quot;:&quot;${mysql_ip}:${ssl_mysql_port}&quot;,&quot;database&quot;:&quot;${database}&quot;,&quot;pool_size&quot;:8,&quot;user&quot;:&quot;${ssl_mysql_user}&quot;,&quot;password&quot;:&quot;${ssl_mysql_pwd}&quot;,&quot;auto_reconnect&quot;:true,&quot;password_hash&quot;:&quot;salt,sha512&quot;,&quot;auth_query&quot;:&quot;select password,salt from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;acl_query&quot;:&quot;select allow, ipaddr, username, clientid, access, topic from mqtt_acl where ipaddr = &apos;%a&apos; or username = &apos;%u&apos; or username = &apos;$all&apos; or clientid = &apos;%c&apos;&quot;,&quot;super_query&quot;:&quot;select is_superuser from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;query_timeout&quot;:&quot;5s&quot;,&quot;ssl&quot;:true,&quot;cacertfile&quot;:{&quot;filename&quot;:&quot;ca.pem&quot;,&quot;file&quot;:&quot;${ca}\u0000&quot;},&quot;keyfile&quot;:{&quot;filename&quot;:&quot;client-key.pem&quot;,&quot;file&quot;:&quot;${client_key}\u0000&quot;},&quot;certfile&quot;:{&quot;filename&quot;:&quot;client-cert.pem&quot;,&quot;file&quot;:&quot;${client_cert}\u0000&quot;},&quot;verify&quot;:false}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules/${mysql_mo_id}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">sha256+salt</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="md5+auth check" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty Auth Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_user;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-234430262">updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert Auth Data" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO `mqtt_user` ( `username`, `password`, `salt`) VALUES (&apos;${data_user}&apos;,&apos;${md5}&apos;,&apos;${salt}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Module ID" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="ser_defined_variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">mysql_mo_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[?(@.type=~/.*mysql_authentication.*/)].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">err_mysql_mo_id</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change Rule" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;type&quot;:&quot;mysql_authentication&quot;,&quot;id&quot;:&quot;${mysql_mo_id}&quot;,&quot;enabled&quot;:true,&quot;description&quot;:{&quot;zh&quot;:&quot;MySQL 认证/访问控制&quot;,&quot;en&quot;:&quot;MySQL AUTH/ACL&quot;},&quot;config&quot;:{&quot;server&quot;:&quot;${mysql_ip}:${ssl_mysql_port}&quot;,&quot;database&quot;:&quot;${database}&quot;,&quot;pool_size&quot;:8,&quot;user&quot;:&quot;${ssl_mysql_user}&quot;,&quot;password&quot;:&quot;${ssl_mysql_pwd}&quot;,&quot;auto_reconnect&quot;:true,&quot;password_hash&quot;:&quot;md5&quot;,&quot;auth_query&quot;:&quot;select password from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;acl_query&quot;:&quot;select allow, ipaddr, username, clientid, access, topic from mqtt_acl where ipaddr = &apos;%a&apos; or username = &apos;%u&apos; or username = &apos;$all&apos; or clientid = &apos;%c&apos;&quot;,&quot;super_query&quot;:&quot;select is_superuser from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;query_timeout&quot;:&quot;5s&quot;,&quot;ssl&quot;:true,&quot;cacertfile&quot;:{&quot;filename&quot;:&quot;ca.pem&quot;,&quot;file&quot;:&quot;${ca}\u0000&quot;},&quot;keyfile&quot;:{&quot;filename&quot;:&quot;client-key.pem&quot;,&quot;file&quot;:&quot;${client_key}\u0000&quot;},&quot;certfile&quot;:{&quot;filename&quot;:&quot;client-cert.pem&quot;,&quot;file&quot;:&quot;${client_cert}\u0000&quot;},&quot;verify&quot;:false}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules/${mysql_mo_id}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">sha256+salt</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="md5+salt auth check" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty Auth Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_user;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-234430262">updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert Auth Data" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO `mqtt_user` ( `username`, `password`, `salt`) VALUES (&apos;${data_user}&apos;,&apos;${md5_salt}&apos;,&apos;${salt}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Module ID" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="ser_defined_variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">mysql_mo_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[?(@.type=~/.*mysql_authentication.*/)].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">err_mysql_mo_id</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change Rule" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;type&quot;:&quot;mysql_authentication&quot;,&quot;id&quot;:&quot;${mysql_mo_id}&quot;,&quot;enabled&quot;:true,&quot;description&quot;:{&quot;zh&quot;:&quot;MySQL 认证/访问控制&quot;,&quot;en&quot;:&quot;MySQL AUTH/ACL&quot;},&quot;config&quot;:{&quot;server&quot;:&quot;${mysql_ip}:${ssl_mysql_port}&quot;,&quot;database&quot;:&quot;${database}&quot;,&quot;pool_size&quot;:8,&quot;user&quot;:&quot;${ssl_mysql_user}&quot;,&quot;password&quot;:&quot;${ssl_mysql_pwd}&quot;,&quot;auto_reconnect&quot;:true,&quot;password_hash&quot;:&quot;md5,salt&quot;,&quot;auth_query&quot;:&quot;select password,salt from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;acl_query&quot;:&quot;select allow, ipaddr, username, clientid, access, topic from mqtt_acl where ipaddr = &apos;%a&apos; or username = &apos;%u&apos; or username = &apos;$all&apos; or clientid = &apos;%c&apos;&quot;,&quot;super_query&quot;:&quot;select is_superuser from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;query_timeout&quot;:&quot;5s&quot;,&quot;ssl&quot;:true,&quot;cacertfile&quot;:{&quot;filename&quot;:&quot;ca.pem&quot;,&quot;file&quot;:&quot;${ca}\u0000&quot;},&quot;keyfile&quot;:{&quot;filename&quot;:&quot;client-key.pem&quot;,&quot;file&quot;:&quot;${client_key}\u0000&quot;},&quot;certfile&quot;:{&quot;filename&quot;:&quot;client-cert.pem&quot;,&quot;file&quot;:&quot;${client_cert}\u0000&quot;},&quot;verify&quot;:false}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules/${mysql_mo_id}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">sha256+salt</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="salt+md5 auth check" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty Auth Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_user;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-234430262">updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert Auth Data" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO `mqtt_user` ( `username`, `password`, `salt`) VALUES (&apos;${data_user}&apos;,&apos;${salt_md5}&apos;,&apos;${salt}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Module ID" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="ser_defined_variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">mysql_mo_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[?(@.type=~/.*mysql_authentication.*/)].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">err_mysql_mo_id</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change Rule" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;type&quot;:&quot;mysql_authentication&quot;,&quot;id&quot;:&quot;${mysql_mo_id}&quot;,&quot;enabled&quot;:true,&quot;description&quot;:{&quot;zh&quot;:&quot;MySQL 认证/访问控制&quot;,&quot;en&quot;:&quot;MySQL AUTH/ACL&quot;},&quot;config&quot;:{&quot;server&quot;:&quot;${mysql_ip}:${ssl_mysql_port}&quot;,&quot;database&quot;:&quot;${database}&quot;,&quot;pool_size&quot;:8,&quot;user&quot;:&quot;${ssl_mysql_user}&quot;,&quot;password&quot;:&quot;${ssl_mysql_pwd}&quot;,&quot;auto_reconnect&quot;:true,&quot;password_hash&quot;:&quot;salt,md5&quot;,&quot;auth_query&quot;:&quot;select password,salt from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;acl_query&quot;:&quot;select allow, ipaddr, username, clientid, access, topic from mqtt_acl where ipaddr = &apos;%a&apos; or username = &apos;%u&apos; or username = &apos;$all&apos; or clientid = &apos;%c&apos;&quot;,&quot;super_query&quot;:&quot;select is_superuser from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;query_timeout&quot;:&quot;5s&quot;,&quot;ssl&quot;:true,&quot;cacertfile&quot;:{&quot;filename&quot;:&quot;ca.pem&quot;,&quot;file&quot;:&quot;${ca}\u0000&quot;},&quot;keyfile&quot;:{&quot;filename&quot;:&quot;client-key.pem&quot;,&quot;file&quot;:&quot;${client_key}\u0000&quot;},&quot;certfile&quot;:{&quot;filename&quot;:&quot;client-cert.pem&quot;,&quot;file&quot;:&quot;${client_cert}\u0000&quot;},&quot;verify&quot;:false}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules/${mysql_mo_id}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">sha256+salt</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="bcrypt+salt auth check" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty Auth Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_user;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-234430262">updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert Auth Data" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO `mqtt_user` ( `username`, `password`, `salt`) VALUES (&apos;${data_user}&apos;,&apos;$2a$05$abcdefghijklmnopqrstuuMceFj4VbmHOj8C7PetMxzZkwre/z.Ri&apos;,&apos;$2a$05$abcdefghijklmnopqrstuu&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Module ID" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="ser_defined_variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">mysql_mo_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[?(@.type=~/.*mysql_authentication.*/)].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">err_mysql_mo_id</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change Rule" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;type&quot;:&quot;mysql_authentication&quot;,&quot;id&quot;:&quot;${mysql_mo_id}&quot;,&quot;enabled&quot;:true,&quot;description&quot;:{&quot;zh&quot;:&quot;MySQL 认证/访问控制&quot;,&quot;en&quot;:&quot;MySQL AUTH/ACL&quot;},&quot;config&quot;:{&quot;server&quot;:&quot;${mysql_ip}:${ssl_mysql_port}&quot;,&quot;database&quot;:&quot;${database}&quot;,&quot;pool_size&quot;:8,&quot;user&quot;:&quot;${ssl_mysql_user}&quot;,&quot;password&quot;:&quot;${ssl_mysql_pwd}&quot;,&quot;auto_reconnect&quot;:true,&quot;password_hash&quot;:&quot;bcrypt,salt&quot;,&quot;auth_query&quot;:&quot;select password,salt from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;acl_query&quot;:&quot;select allow, ipaddr, username, clientid, access, topic from mqtt_acl where ipaddr = &apos;%a&apos; or username = &apos;%u&apos; or username = &apos;$all&apos; or clientid = &apos;%c&apos;&quot;,&quot;super_query&quot;:&quot;select is_superuser from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;query_timeout&quot;:&quot;5s&quot;,&quot;ssl&quot;:true,&quot;cacertfile&quot;:{&quot;filename&quot;:&quot;ca.pem&quot;,&quot;file&quot;:&quot;${ca}\u0000&quot;},&quot;keyfile&quot;:{&quot;filename&quot;:&quot;client-key.pem&quot;,&quot;file&quot;:&quot;${client_key}\u0000&quot;},&quot;certfile&quot;:{&quot;filename&quot;:&quot;client-cert.pem&quot;,&quot;file&quot;:&quot;${client_cert}\u0000&quot;},&quot;verify&quot;:false}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules/${mysql_mo_id}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">sha256+salt</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="salt+bcrypt auth check" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Empty Auth Table" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">delete from mqtt_user;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-234430262">updates</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert Auth Data" enabled="true">
              <stringProp name="dataSource">mysql8</stringProp>
              <stringProp name="query">INSERT INTO `mqtt_user` ( `username`, `password`, `salt`) VALUES (&apos;${data_user}&apos;,&apos;$2a$05$abcdefghijklmnopqrstuuMceFj4VbmHOj8C7PetMxzZkwre/z.Ri&apos;,&apos;$2a$05$abcdefghijklmnopqrstuu&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-838846263">update</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Module ID" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="ser_defined_variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">mysql_mo_id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[?(@.type=~/.*mysql_authentication.*/)].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">err_mysql_mo_id</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change Rule" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;type&quot;:&quot;mysql_authentication&quot;,&quot;id&quot;:&quot;${mysql_mo_id}&quot;,&quot;enabled&quot;:true,&quot;description&quot;:{&quot;zh&quot;:&quot;MySQL 认证/访问控制&quot;,&quot;en&quot;:&quot;MySQL AUTH/ACL&quot;},&quot;config&quot;:{&quot;server&quot;:&quot;${mysql_ip}:${ssl_mysql_port}&quot;,&quot;database&quot;:&quot;${database}&quot;,&quot;pool_size&quot;:8,&quot;user&quot;:&quot;${ssl_mysql_user}&quot;,&quot;password&quot;:&quot;${ssl_mysql_pwd}&quot;,&quot;auto_reconnect&quot;:true,&quot;password_hash&quot;:&quot;salt,bcrypt&quot;,&quot;auth_query&quot;:&quot;select password,salt from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;acl_query&quot;:&quot;select allow, ipaddr, username, clientid, access, topic from mqtt_acl where ipaddr = &apos;%a&apos; or username = &apos;%u&apos; or username = &apos;$all&apos; or clientid = &apos;%c&apos;&quot;,&quot;super_query&quot;:&quot;select is_superuser from mqtt_user where username = &apos;%u&apos; limit 1&quot;,&quot;query_timeout&quot;:&quot;5s&quot;,&quot;ssl&quot;:true,&quot;cacertfile&quot;:{&quot;filename&quot;:&quot;ca.pem&quot;,&quot;file&quot;:&quot;${ca}\u0000&quot;},&quot;keyfile&quot;:{&quot;filename&quot;:&quot;client-key.pem&quot;,&quot;file&quot;:&quot;${client_key}\u0000&quot;},&quot;certfile&quot;:{&quot;filename&quot;:&quot;client-cert.pem&quot;,&quot;file&quot;:&quot;${client_cert}\u0000&quot;},&quot;verify&quot;:false}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">${api_version}/modules/${mysql_mo_id}</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">sha256+salt</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.ConnectSampler guiclass="net.xmeter.gui.ConnectSamplerUI" testclass="net.xmeter.samplers.ConnectSampler" testname="MQTT Connect" enabled="true">
              <stringProp name="mqtt.server">${emqx_ip}</stringProp>
              <stringProp name="mqtt.port">1883</stringProp>
              <stringProp name="mqtt.version">3.1</stringProp>
              <stringProp name="mqtt.conn_timeout">10</stringProp>
              <stringProp name="mqtt.protocol">TCP</stringProp>
              <stringProp name="mqtt.ws_path">/mqtt</stringProp>
              <boolProp name="mqtt.dual_ssl_authentication">false</boolProp>
              <stringProp name="mqtt.clientcert_file_path"></stringProp>
              <stringProp name="mqtt.clientcert_password"></stringProp>
              <stringProp name="mqtt.user_name">${data_user}</stringProp>
              <stringProp name="mqtt.password">${data_pwd}</stringProp>
              <stringProp name="mqtt.client_id_prefix">${client_id}</stringProp>
              <boolProp name="mqtt.client_id_suffix">true</boolProp>
              <stringProp name="mqtt.conn_keep_alive">300</stringProp>
              <stringProp name="mqtt.conn_attampt_max">0</stringProp>
              <stringProp name="mqtt.reconn_attampt_max">0</stringProp>
              <stringProp name="mqtt.conn_clean_session">true</stringProp>
            </net.xmeter.samplers.ConnectSampler>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="constant timer" enabled="true">
                <stringProp name="ConstantTimer.delay">2000</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <net.xmeter.samplers.DisConnectSampler guiclass="net.xmeter.gui.DisConnectSamplerUI" testclass="net.xmeter.samplers.DisConnectSampler" testname="MQTT DisConnect" enabled="true"/>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1259833018">Successful</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
